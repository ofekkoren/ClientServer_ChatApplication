// <auto-generated />
using ChatWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatWebApi.Migrations
{
    [DbContext(typeof(ChatWebApiContext))]
    [Migration("20220620184859_ChtWebApiD")]
    partial class ChtWebApiD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChatWebApi.Models.Contact", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("last")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastdate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("server")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("ChatWebApi.Models.Conversation", b =>
                {
                    b.Property<string>("ConversationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Userid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("contactid")
                        .HasColumnType("int");

                    b.HasKey("ConversationId");

                    b.HasIndex("Userid");

                    b.HasIndex("contactid");

                    b.ToTable("Conversation");
                });

            modelBuilder.Entity("ChatWebApi.Models.FirebaseUserToken", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("username");

                    b.ToTable("FirebaseUserToken");
                });

            modelBuilder.Entity("ChatWebApi.Models.Message", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("ConversationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("created")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("sent")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("ConversationId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("ChatWebApi.Models.User", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ChatWebApi.Models.Conversation", b =>
                {
                    b.HasOne("ChatWebApi.Models.User", null)
                        .WithMany("conversations")
                        .HasForeignKey("Userid");

                    b.HasOne("ChatWebApi.Models.Contact", "contact")
                        .WithMany()
                        .HasForeignKey("contactid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("contact");
                });

            modelBuilder.Entity("ChatWebApi.Models.Message", b =>
                {
                    b.HasOne("ChatWebApi.Models.Conversation", null)
                        .WithMany("messages")
                        .HasForeignKey("ConversationId");
                });

            modelBuilder.Entity("ChatWebApi.Models.Conversation", b =>
                {
                    b.Navigation("messages");
                });

            modelBuilder.Entity("ChatWebApi.Models.User", b =>
                {
                    b.Navigation("conversations");
                });
#pragma warning restore 612, 618
        }
    }
}
