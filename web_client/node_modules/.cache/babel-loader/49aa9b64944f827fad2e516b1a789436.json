{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eitan Koren\\\\oop2\\\\ap2\\\\src\\\\chatScreen\\\\Message.js\";\nimport './ChatScreen.css';\nimport \"./RightScreen.css\";\nimport { getFormattedDateString } from \"./Utils\";\n/**\r\n * A component of a single chat message.\r\n * @param props contains the information about a message in the chat\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Message(props) {\n  const createMessageContent = message => {\n    console.log(message);\n    if (message.type === \"text\") return /*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"text-message\",\n      children: props.message.content\n    }, props.index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }, this);\n    if (message.type === \"image\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: message.content,\n        className: \"image-message\"\n      }, props.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"general-message \" + (props.user.username === props.message.sender ? 'sent-message' : 'received-message'),\n    children: [createMessageContent(props.message), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-date\",\n      children: getFormattedDateString(props.message)\n    }, props.index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["C:/Users/Eitan Koren/oop2/ap2/src/chatScreen/Message.js"],"names":["getFormattedDateString","Message","props","createMessageContent","message","console","log","type","content","index","user","username","sender"],"mappings":";AAAA,OAAO,kBAAP;AACA,OAAO,mBAAP;AACA,SAAQA,sBAAR,QAAqC,SAArC;AAEA;AACA;AACA;AACA;;;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEpB,QAAMC,oBAAoB,GAAIC,OAAD,IAAa;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAIA,OAAO,CAACG,IAAR,KAAiB,MAArB,EACI,oBAAQ;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,gBAAgDL,KAAK,CAACE,OAAN,CAAcI;AAA9D,OAAkCN,KAAK,CAACO,KAAxC;AAAA;AAAA;AAAA;AAAA,YAAR;AACJ,QAAIL,OAAO,CAACG,IAAR,KAAiB,OAArB,EACI,oBAAQ;AAAA,6BAAK;AAAK,QAAA,GAAG,EAAEH,OAAO,CAACI,OAAlB;AAA2B,QAAA,SAAS,EAAC;AAArC,SAA0DN,KAAK,CAACO,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAAR;AACP,GAND;;AAQA,sBACI;AACI,IAAA,SAAS,EAAE,sBAAsBP,KAAK,CAACQ,IAAN,CAAWC,QAAX,KAAwBT,KAAK,CAACE,OAAN,CAAcQ,MAAtC,GAA+C,cAA/C,GAAgE,kBAAtF,CADf;AAAA,eAEKT,oBAAoB,CAACD,KAAK,CAACE,OAAP,CAFzB,eAGI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA+CJ,sBAAsB,CAACE,KAAK,CAACE,OAAP;AAArE,OAAiCF,KAAK,CAACO,KAAvC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KAlBQR,O;AAoBT,eAAeA,OAAf","sourcesContent":["import './ChatScreen.css';\r\nimport \"./RightScreen.css\"\r\nimport {getFormattedDateString} from \"./Utils\";\r\n\r\n/**\r\n * A component of a single chat message.\r\n * @param props contains the information about a message in the chat\r\n */\r\nfunction Message(props) {\r\n\r\n    const createMessageContent = (message) => {\r\n        console.log(message)\r\n        if (message.type === \"text\")\r\n            return (<h6 className=\"text-message\" key={props.index}>{props.message.content}</h6>)\r\n        if (message.type === \"image\")\r\n            return (<div><img src={message.content} className=\"image-message\" key={props.index}/></div>)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={\"general-message \" + (props.user.username === props.message.sender ? 'sent-message' : 'received-message')}>\r\n            {createMessageContent(props.message)}\r\n            <span className=\"text-date\" key={props.index}>{getFormattedDateString(props.message)}</span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Message;"]},"metadata":{},"sourceType":"module"}