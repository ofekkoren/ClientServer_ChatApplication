{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eitan Koren\\\\oop2\\\\ap2\\\\src\\\\chatScreen\\\\rightScreen\\\\Message.js\";\nimport '../ChatScreen.css';\nimport \"./Message.css\";\nimport { getFormattedDateString } from \"../Utils\";\nimport React from \"react\";\n/**\r\n * A component of a single chat message.\r\n * @param props contains the information about a message in the chat\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Message(props) {\n  const createMessageContent = message => {\n    if (message.type === \"text\") return /*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"text-message\",\n      children: props.message.content\n    }, props.index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }, this);\n    if (message.type === \"image\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: message.content,\n        alt: \"img\",\n        className: \"image-message\"\n      }, props.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, this);\n\n    if (message.type === \"audio\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          className: \"audio-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: message.content,\n            className: \"audio-message\"\n          }, props.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this), \"Your browser does not support the audio tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (message.type === \"video\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-message-div \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"embed-responsive embed-responsive-16by9\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          src: message.content,\n          className: \"video-message\",\n          preload: \"auto\",\n          controls: \"controls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 20\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"general-message \" + (props.user.username === props.message.sender ? 'sent-message' : 'received-message'),\n    children: [createMessageContent(props.message), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-date\",\n      children: getFormattedDateString(props.message)\n    }, props.index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["C:/Users/Eitan Koren/oop2/ap2/src/chatScreen/rightScreen/Message.js"],"names":["getFormattedDateString","React","Message","props","createMessageContent","message","type","content","index","user","username","sender"],"mappings":";AAAA,OAAO,mBAAP;AACA,OAAO,eAAP;AACA,SAAQA,sBAAR,QAAqC,UAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;;;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEpB,QAAMC,oBAAoB,GAAIC,OAAD,IAAa;AACtC,QAAIA,OAAO,CAACC,IAAR,KAAiB,MAArB,EACI,oBAAQ;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,gBAAgDH,KAAK,CAACE,OAAN,CAAcE;AAA9D,OAAkCJ,KAAK,CAACK,KAAxC;AAAA;AAAA;AAAA;AAAA,YAAR;AACJ,QAAIH,OAAO,CAACC,IAAR,KAAiB,OAArB,EACI,oBAAQ;AAAA,6BAAK;AAAK,QAAA,GAAG,EAAED,OAAO,CAACE,OAAlB;AAA2B,QAAA,GAAG,EAAC,KAA/B;AAAqC,QAAA,SAAS,EAAC;AAA/C,SAAoEJ,KAAK,CAACK,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAAR;;AACJ,QAAIH,OAAO,CAACC,IAAR,KAAiB,OAArB,EAA8B;AAC1B,0BAAO;AAAA,+BACH;AAAO,UAAA,QAAQ,MAAf;AAAgB,UAAA,SAAS,EAAC,eAA1B;AAAA,kCACI;AAAQ,YAAA,GAAG,EAAED,OAAO,CAACE,OAArB;AAA8B,YAAA,SAAS,EAAC;AAAxC,aAA6DJ,KAAK,CAACK,KAAnE;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,cAAP;AAMH;;AACD,QAAIH,OAAO,CAACC,IAAR,KAAiB,OAArB,EACI,oBAAO;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACH;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA,+BACI;AAAO,UAAA,GAAG,EAAED,OAAO,CAACE,OAApB;AAA6B,UAAA,SAAS,EAAC,eAAvC;AAAuD,UAAA,OAAO,EAAC,MAA/D;AAAsE,UAAA,QAAQ,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAKP,GAnBD;;AAqBA,sBACI;AACI,IAAA,SAAS,EAAE,sBAAsBJ,KAAK,CAACM,IAAN,CAAWC,QAAX,KAAwBP,KAAK,CAACE,OAAN,CAAcM,MAAtC,GAA+C,cAA/C,GAAgE,kBAAtF,CADf;AAAA,eAEKP,oBAAoB,CAACD,KAAK,CAACE,OAAP,CAFzB,eAGI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA+CL,sBAAsB,CAACG,KAAK,CAACE,OAAP;AAArE,OAAiCF,KAAK,CAACK,KAAvC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KA9BQN,O;AAgCT,eAAeA,OAAf","sourcesContent":["import '../ChatScreen.css';\r\nimport \"./Message.css\"\r\nimport {getFormattedDateString} from \"../Utils\";\r\nimport React from \"react\";\r\n\r\n/**\r\n * A component of a single chat message.\r\n * @param props contains the information about a message in the chat\r\n */\r\nfunction Message(props) {\r\n\r\n    const createMessageContent = (message) => {\r\n        if (message.type === \"text\")\r\n            return (<h6 className=\"text-message\" key={props.index}>{props.message.content}</h6>)\r\n        if (message.type === \"image\")\r\n            return (<div><img src={message.content} alt=\"img\" className=\"image-message\" key={props.index}/></div>)\r\n        if (message.type === \"audio\") {\r\n            return <div>\r\n                <audio controls className=\"audio-message\">\r\n                    <source src={message.content} className=\"audio-message\" key={props.index}></source>\r\n                    Your browser does not support the audio tag.\r\n                </audio>\r\n            </div>\r\n        }\r\n        if (message.type === \"video\")\r\n            return <div className=\"video-message-div \">\r\n                <div className=\"embed-responsive embed-responsive-16by9\">\r\n                    <video src={message.content} className=\"video-message\" preload=\"auto\" controls=\"controls\"></video>\r\n                </div>\r\n            </div>\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={\"general-message \" + (props.user.username === props.message.sender ? 'sent-message' : 'received-message')}>\r\n            {createMessageContent(props.message)}\r\n            <span className=\"text-date\" key={props.index}>{getFormattedDateString(props.message)}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;"]},"metadata":{},"sourceType":"module"}