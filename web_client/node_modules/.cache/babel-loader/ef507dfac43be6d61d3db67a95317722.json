{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eitan Koren\\\\oop2\\\\ap2\\\\src\\\\chatScreen\\\\AddNewChat.js\";\nimport React from 'react';\nimport conversations from '../db/Conversations';\nimport users from '../db/UsersDataBase';\nimport LeftScreen from './LeftScreen';\nimport LeftChatItem from './leftChatItem/LeftChatItem';\nimport './AddNewChat.css'; // function AddNewChat(logInUsername, conversationsList, newContact, relevantInfo) {\n\nimport { createElement as _createElement } from \"react\";\n\nfunction AddNewChat(props) {\n  var isRegisteredUser = false; // If the user entered his contact's identifier username, do nothing. \n\n  if (logInUsername == newContact) {\n    return;\n  }\n\n  for (var i = 0; i < Object.keys(conversationsList).length; i++) {\n    // If the user already have a conversation with this contact, do nothing.\n    if (conversationsList[i].usernameInChat == newContact) {\n      return;\n    }\n  }\n\n  var user;\n\n  for (var i = 0; i < Object.keys(users).length; i++) {\n    // If the user already have a conversation with this contact, do nothing.\n    if (logInUsername == users[i].username) {\n      user = users[i];\n    }\n  }\n\n  var newConversation;\n\n  for (var i = 0; i < Object.keys(users).length; i++) {\n    // If the user already have a conversation with this contact, do nothing.\n    if (newContact == users[i].username) {\n      isRegisteredUser = true; //add its username, nickname, image\n\n      newConversation = {\n        users: [{\n          username: user.username,\n          nickname: user.nickname,\n          image: user.image\n        }, {\n          username: users[i].username,\n          nickname: users[i].nickname,\n          image: users[i].image\n        }],\n        messages: [{\n          type: \"\",\n          content: \"\",\n          createdAt: \"\"\n        }]\n      };\n    }\n  } //If the user is not registered, do nothing.\n\n\n  if (!isRegisteredUser) {\n    return;\n  } else {\n    var usernameInChat = \"\";\n    var lastMessage = \"\";\n    var time = \"\";\n    var image;\n    var type = \"\";\n    conversations.unshift(newConversation); // console.log(conversationsList);\n    // Adding new conversation as a LeftChatItem to relevantInfo map.\n\n    lastMessage = newConversation.messages[Object.keys(newConversation.messages).length - 1].content;\n    type = newConversation.messages[Object.keys(newConversation.messages).length - 1].type;\n    time = newConversation.messages[Object.keys(newConversation.messages).length - 1].createdAt;\n    image = newConversation.users[1].image;\n    relevantInfo.unshift({\n      usernameInChat: newContact,\n      type: type,\n      lastMessage: lastMessage,\n      time: time,\n      image: image\n    });\n    conversationsList = relevantInfo.map((conversation, key) => {\n      return /*#__PURE__*/_createElement(LeftChatItem, { ...conversation,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }\n      });\n    }); // let chatsArr = [...props.chat.messages, messageInfo]\n    // var conversation = { usernameInChat: newContact, type: type, lastMessage: lastMessage, time: time, image: image }\n    // <LeftChatItem usernameInChat={newContact} type={type} lastMessage={lastMessage} time={time} image={image} />\n  }\n\n  return {\n    conversationsList\n  } // console.log(\"hellllee\")\n  // <div className=\"col-4 newtab\">\n  //     <div>hello</div>\n  //     {/* <div>\n  //         {conversationsList}\n  //     </div> */}\n  // </div>\n  ;\n}\n\n_c = AddNewChat;\nexport default AddNewChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewChat\");","map":{"version":3,"sources":["C:/Users/Eitan Koren/oop2/ap2/src/chatScreen/AddNewChat.js"],"names":["React","conversations","users","LeftScreen","LeftChatItem","AddNewChat","props","isRegisteredUser","logInUsername","newContact","i","Object","keys","conversationsList","length","usernameInChat","user","username","newConversation","nickname","image","messages","type","content","createdAt","lastMessage","time","unshift","relevantInfo","map","conversation","key"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport conversations from '../db/Conversations';\r\nimport users from '../db/UsersDataBase';\r\nimport LeftScreen from './LeftScreen';\r\nimport LeftChatItem from './leftChatItem/LeftChatItem';\r\nimport './AddNewChat.css';\r\n\r\n// function AddNewChat(logInUsername, conversationsList, newContact, relevantInfo) {\r\n    function AddNewChat(props) {\r\n\r\n    var isRegisteredUser = false;\r\n\r\n    // If the user entered his contact's identifier username, do nothing. \r\n    if (logInUsername == newContact) {\r\n        return;\r\n    }\r\n    for (var i = 0; i < Object.keys(conversationsList).length; i++) {\r\n        // If the user already have a conversation with this contact, do nothing.\r\n        if (conversationsList[i].usernameInChat == newContact) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    var user;\r\n    for (var i = 0; i < Object.keys(users).length; i++) {\r\n        // If the user already have a conversation with this contact, do nothing.\r\n        if (logInUsername == users[i].username) {\r\n            user = users[i];\r\n        }\r\n    }\r\n    var newConversation;\r\n    for (var i = 0; i < Object.keys(users).length; i++) {\r\n        // If the user already have a conversation with this contact, do nothing.\r\n        if (newContact == users[i].username) {\r\n            isRegisteredUser = true;\r\n            //add its username, nickname, image\r\n            newConversation = {\r\n                users: [{ username: user.username, nickname: user.nickname, image: user.image },\r\n                { username: users[i].username, nickname: users[i].nickname, image: users[i].image }],\r\n                messages: [{ type: \"\", content: \"\", createdAt: \"\" }]\r\n            }\r\n        }\r\n    }\r\n    //If the user is not registered, do nothing.\r\n    if (!isRegisteredUser) {\r\n        return;\r\n    } else {\r\n        var usernameInChat = \"\";\r\n        var lastMessage = \"\";\r\n        var time = \"\";\r\n        var image;\r\n        var type = \"\";\r\n        conversations.unshift(newConversation);\r\n        // console.log(conversationsList);\r\n\r\n        // Adding new conversation as a LeftChatItem to relevantInfo map.\r\n        lastMessage = newConversation.messages[Object.keys(newConversation.messages).length - 1].content;\r\n        type = newConversation.messages[Object.keys(newConversation.messages).length - 1].type;\r\n        time = newConversation.messages[Object.keys(newConversation.messages).length - 1].createdAt;\r\n        image = newConversation.users[1].image;\r\n\r\n        relevantInfo.unshift({ usernameInChat: newContact, type: type, lastMessage: lastMessage, time: time, image: image });\r\n        conversationsList = relevantInfo.map((conversation, key) => {\r\n            return <LeftChatItem {...conversation} key={key} />\r\n        });\r\n\r\n        // let chatsArr = [...props.chat.messages, messageInfo]\r\n\r\n        // var conversation = { usernameInChat: newContact, type: type, lastMessage: lastMessage, time: time, image: image }\r\n        // <LeftChatItem usernameInChat={newContact} type={type} lastMessage={lastMessage} time={time} image={image} />\r\n    \r\n    }\r\n    return (\r\n        {conversationsList}\r\n        // console.log(\"hellllee\")\r\n        // <div className=\"col-4 newtab\">\r\n        //     <div>hello</div>\r\n        //     {/* <div>\r\n        //         {conversationsList}\r\n        //     </div> */}\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default AddNewChat;"]},"metadata":{},"sourceType":"module"}