{"ast":null,"code":"import React from 'react';\nimport conversations from '../db/Conversations';\nimport users from '../db/UsersDataBase';\nimport LeftScreen from './LeftScreen';\nimport LeftChatItem from './leftChatItem/LeftChatItem';\nimport ChooseNewChat from './ChooseNewChat';\n\nfunction AddNewChat(props) {\n  var isRegisteredUser = false; // If the user entered his contact's identifier username, do nothing. \n\n  if (props.logInUsername === props.newContact) {\n    return;\n  }\n\n  for (var i = 0; i < Object.keys(props.conversationsList).length; i++) {\n    // If the user already have a conversation with this contact, do nothing.\n    if (props.conversationsList[i].props.conversation.usernameInChat === props.newContact) {\n      var invalidUser = \"this user is already talking with you!\";\n      document.getElementById(\"validation\").innerHTML = invalidUser;\n      return;\n    }\n  }\n\n  var user;\n\n  for (var i = 0; i < Object.keys(users).length; i++) {\n    if (props.logInUsername == users[i].username) {\n      user = users[i];\n    }\n  }\n\n  var newConversation;\n\n  for (var i = 0; i < Object.keys(users).length; i++) {\n    // If the user already have a conversation with this contact, do nothing.\n    if (props.newContact === users[i].username) {\n      isRegisteredUser = true; //add its username, nickname, image\n\n      newConversation = {\n        users: [{\n          username: user.username,\n          nickname: user.nickname,\n          image: user.image\n        }, {\n          username: users[i].username,\n          nickname: users[i].nickname,\n          image: users[i].image\n        }],\n        messages: []\n      };\n    }\n  } //If the user is not registered, do nothing.\n\n\n  if (!isRegisteredUser) {\n    i; // var textBox = document.getElementById(\"floatingTextarea\");\n    // textBox.append(\"Some text\");\n\n    var invalidUser = \"invalid user!\";\n    document.getElementById(\"validation\").innerHTML = invalidUser;\n    return;\n  } else {\n    var invalidUser = \"user added successfully!\";\n    document.getElementById(\"validation\").innerHTML = invalidUser;\n    return newConversation;\n  } // return (\n  //     // {conversationsList}\n  //     // console.log(\"hellllee\")\n  //     <div className=\"col-4 newtab\">\n  //         <div>hello</div>\n  //         {/* <div>\n  //     //         {conversationsList}\n  //     //     </div> */}\n  //     </div>\n  // );\n\n}\n\n_c = AddNewChat;\nexport default AddNewChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewChat\");","map":{"version":3,"sources":["C:/Users/Eitan Koren/oop2/ap2/src/chatScreen/AddNewChat.js"],"names":["React","conversations","users","LeftScreen","LeftChatItem","ChooseNewChat","AddNewChat","props","isRegisteredUser","logInUsername","newContact","i","Object","keys","conversationsList","length","conversation","usernameInChat","invalidUser","document","getElementById","innerHTML","user","username","newConversation","nickname","image","messages"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEvB,MAAIC,gBAAgB,GAAG,KAAvB,CAFuB,CAIvB;;AACA,MAAID,KAAK,CAACE,aAAN,KAAwBF,KAAK,CAACG,UAAlC,EAA8C;AAC1C;AACH;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACO,iBAAlB,EAAqCC,MAAzD,EAAiEJ,CAAC,EAAlE,EAAsE;AAClE;AACA,QAAIJ,KAAK,CAACO,iBAAN,CAAwBH,CAAxB,EAA2BJ,KAA3B,CAAiCS,YAAjC,CAA8CC,cAA9C,KAAiEV,KAAK,CAACG,UAA3E,EAAuF;AACnF,UAAIQ,WAAW,GAAG,wCAAlB;AACAC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,SAAtC,GAAkDH,WAAlD;AACA;AACH;AACJ;;AAED,MAAII,IAAJ;;AACA,OAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYX,KAAZ,EAAmBa,MAAvC,EAA+CJ,CAAC,EAAhD,EAAoD;AAChD,QAAIJ,KAAK,CAACE,aAAN,IAAuBP,KAAK,CAACS,CAAD,CAAL,CAASY,QAApC,EAA8C;AAC1CD,MAAAA,IAAI,GAAGpB,KAAK,CAACS,CAAD,CAAZ;AACH;AACJ;;AAED,MAAIa,eAAJ;;AACA,OAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYX,KAAZ,EAAmBa,MAAvC,EAA+CJ,CAAC,EAAhD,EAAoD;AAChD;AACA,QAAIJ,KAAK,CAACG,UAAN,KAAqBR,KAAK,CAACS,CAAD,CAAL,CAASY,QAAlC,EAA4C;AACxCf,MAAAA,gBAAgB,GAAG,IAAnB,CADwC,CAExC;;AACAgB,MAAAA,eAAe,GAAG;AACdtB,QAAAA,KAAK,EAAE,CAAC;AAAEqB,UAAAA,QAAQ,EAAED,IAAI,CAACC,QAAjB;AAA2BE,UAAAA,QAAQ,EAAEH,IAAI,CAACG,QAA1C;AAAoDC,UAAAA,KAAK,EAAEJ,IAAI,CAACI;AAAhE,SAAD,EACP;AAAEH,UAAAA,QAAQ,EAAErB,KAAK,CAACS,CAAD,CAAL,CAASY,QAArB;AAA+BE,UAAAA,QAAQ,EAAEvB,KAAK,CAACS,CAAD,CAAL,CAASc,QAAlD;AAA4DC,UAAAA,KAAK,EAAExB,KAAK,CAACS,CAAD,CAAL,CAASe;AAA5E,SADO,CADO;AAGdC,QAAAA,QAAQ,EAAE;AAHI,OAAlB;AAKH;AACJ,GArCsB,CAwCvB;;;AACA,MAAI,CAACnB,gBAAL,EAAuB;AACnBG,IAAAA,CAAC,CADkB,CAEnB;AACA;;AACA,QAAIO,WAAW,GAAG,eAAlB;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,SAAtC,GAAkDH,WAAlD;AACA;AACH,GAPD,MAOO;AACH,QAAIA,WAAW,GAAG,0BAAlB;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,SAAtC,GAAkDH,WAAlD;AACA,WAAOM,eAAP;AACH,GApDsB,CAqDvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;;KA/DQlB,U;AAiET,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport conversations from '../db/Conversations';\r\nimport users from '../db/UsersDataBase';\r\nimport LeftScreen from './LeftScreen';\r\nimport LeftChatItem from './leftChatItem/LeftChatItem';\r\nimport ChooseNewChat from './ChooseNewChat';\r\n\r\nfunction AddNewChat(props) {\r\n\r\n    var isRegisteredUser = false;\r\n    \r\n    // If the user entered his contact's identifier username, do nothing. \r\n    if (props.logInUsername === props.newContact) {\r\n        return;\r\n    }\r\n\r\n    for (var i = 0; i < Object.keys(props.conversationsList).length; i++) {\r\n        // If the user already have a conversation with this contact, do nothing.\r\n        if (props.conversationsList[i].props.conversation.usernameInChat === props.newContact) {\r\n            var invalidUser = \"this user is already talking with you!\"\r\n            document.getElementById(\"validation\").innerHTML = invalidUser;\r\n            return;\r\n        }\r\n    }\r\n\r\n    var user;\r\n    for (var i = 0; i < Object.keys(users).length; i++) {\r\n        if (props.logInUsername == users[i].username) {\r\n            user = users[i];\r\n        }\r\n    }\r\n\r\n    var newConversation;\r\n    for (var i = 0; i < Object.keys(users).length; i++) {\r\n        // If the user already have a conversation with this contact, do nothing.\r\n        if (props.newContact === users[i].username) {\r\n            isRegisteredUser = true;\r\n            //add its username, nickname, image\r\n            newConversation = {\r\n                users: [{ username: user.username, nickname: user.nickname, image: user.image },\r\n                { username: users[i].username, nickname: users[i].nickname, image: users[i].image }],\r\n                messages: []\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //If the user is not registered, do nothing.\r\n    if (!isRegisteredUser) {\r\n        i\r\n        // var textBox = document.getElementById(\"floatingTextarea\");\r\n        // textBox.append(\"Some text\");\r\n        var invalidUser = \"invalid user!\"\r\n        document.getElementById(\"validation\").innerHTML = invalidUser;\r\n        return;\r\n    } else {\r\n        var invalidUser = \"user added successfully!\"\r\n        document.getElementById(\"validation\").innerHTML = invalidUser;\r\n        return newConversation;\r\n    }\r\n    // return (\r\n    //     // {conversationsList}\r\n    //     // console.log(\"hellllee\")\r\n    //     <div className=\"col-4 newtab\">\r\n    //         <div>hello</div>\r\n    //         {/* <div>\r\n    //     //         {conversationsList}\r\n    //     //     </div> */}\r\n    //     </div>\r\n    // );\r\n}\r\n\r\nexport default AddNewChat;"]},"metadata":{},"sourceType":"module"}