{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eitan Koren\\\\oop2\\\\ex2\\\\clientSide\\\\src\\\\logIn\\\\LogIn.js\";\nimport './LogIn.css';\nimport ChatScreen from '../chatScreen/ChatScreen';\nimport '../signUp/SignUp.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { getUser } from '../chatScreen/Utils';\nimport './Try.css'; // Keeps the current user which will be logged-in to the website.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar user = \"\";\nvar currentChatGlobal = \"\";\n/**\r\n * Setter to the logged-in user.\r\n * @param initializedUser is an update user logged in the website.\r\n */\n\nfunction setUser(initializedUser) {\n  user = initializedUser;\n}\n\nexport { user, setUser };\n/**\r\n * The LogIn function is the log-in logic. It gives the user an option to log in to the web by\r\n * entering his name and password, and if the fields are valid it enters him into his\r\n * chats screen.\r\n */\n\nfunction LogIn() {\n  function handle(e) {\n    var text = document.getElementById(appendTxt);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"html\", {\n    children: [/*#__PURE__*/_jsxDEV(\"head\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"text\", {\n            children: [\" Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"usernameInput\",\n              placeholder: \"Username please :)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"text\", {\n            children: [\" password\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password please :)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"btn\",\n            onClick: handle,\n            children: \" Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"appendTxt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 1\n  }, this);\n}\n\n_c = LogIn;\nexport default LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["C:/Users/Eitan Koren/oop2/ex2/clientSide/src/logIn/LogIn.js"],"names":["ChatScreen","React","ReactDOM","Link","useNavigate","useParams","getUser","user","currentChatGlobal","setUser","initializedUser","LogIn","handle","e","text","document","getElementById","appendTxt"],"mappings":";AAAA,OAAO,aAAP;AACA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,OAAO,sBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,IAAR,EAAcC,WAAd,EAA2BC,SAA3B,QAA2C,kBAA3C;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAO,WAAP,C,CAEA;;;AACA,IAAIC,IAAI,GAAG,EAAX;AACA,IAAIC,iBAAiB,GAAC,EAAtB;AACA;AACA;AACA;AACA;;AACA,SAASC,OAAT,CAAiBC,eAAjB,EAAkC;AAChCH,EAAAA,IAAI,GAAGG,eAAP;AACD;;AACD,SAAQH,IAAR,EAAcE,OAAd;AAIA;AACA;AACA;AACA;AACA;;AACA,SAASE,KAAT,GAAiB;AAEf,WAASC,MAAT,CAAgBC,CAAhB,EAAmB;AACjB,QAAIC,IAAI,GAAIC,QAAQ,CAACC,cAAT,CAAwBC,SAAxB,CAAZ;AACD;;AACC,sBAEJ;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAA,iCACI;AAAA,iDACI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,EAAE,EAAC,eAAtB;AAAsC,cAAA,WAAW,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAA,iCACI;AAAA,iDACI;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,WAAW,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPF,eAaE;AAAA,kCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,EAAE,EAAC,KAAzB;AAA+B,YAAA,OAAO,EAAEL,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE;AAAK,YAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFI;AA8BH;;KAnCQD,K;AAoCT,eAAeA,KAAf","sourcesContent":["import './LogIn.css';\r\nimport ChatScreen from '../chatScreen/ChatScreen';\r\nimport '../signUp/SignUp.css'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Link, useNavigate, useParams} from \"react-router-dom\";\r\nimport { getUser } from '../chatScreen/Utils';\r\nimport './Try.css'\r\n\r\n// Keeps the current user which will be logged-in to the website.\r\nvar user = \"\";\r\nvar currentChatGlobal=\"\";\r\n/**\r\n * Setter to the logged-in user.\r\n * @param initializedUser is an update user logged in the website.\r\n */\r\nfunction setUser(initializedUser) {\r\n  user = initializedUser;\r\n}\r\nexport {user, setUser};\r\n\r\n\r\n\r\n/**\r\n * The LogIn function is the log-in logic. It gives the user an option to log in to the web by\r\n * entering his name and password, and if the fields are valid it enters him into his\r\n * chats screen.\r\n */\r\nfunction LogIn() {\r\n  \r\n  function handle(e) {\r\n    var text =  document.getElementById(appendTxt)\r\n  }\r\n    return (\r\n\r\n<html>\r\n    <head>\r\n            {/* <Link href=\"Try.css\" rel=\"stylesheet\"></Link> */}\r\n    </head>\r\n    <body>\r\n      <div className='form'>\r\n        <div>\r\n            <text> Username\r\n                <input type=\"text\" id=\"usernameInput\" placeholder='Username please :)'> \r\n                </input>\r\n            </text>\r\n        </div>\r\n        <div>\r\n            <text> password\r\n                <input type=\"password\" placeholder='Password please :)'> \r\n                </input>\r\n            </text>\r\n        </div>\r\n        <div>\r\n          <button type='button' id=\"btn\" onClick={handle}> Login\r\n          </button>\r\n          <div id=\"appendTxt\">\r\n          </div>\r\n        </div>\r\n        </div>\r\n    </body>\r\n</html>\r\n    );\r\n}\r\nexport default LogIn;"]},"metadata":{},"sourceType":"module"}