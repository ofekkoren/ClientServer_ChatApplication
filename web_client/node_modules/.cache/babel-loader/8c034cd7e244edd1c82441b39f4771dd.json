{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eitan Koren\\\\oop2\\\\ex2\\\\clientSide\\\\src\\\\chatScreen\\\\leftScreen\\\\LeftScreen.js\";\nimport React, { useEffect } from 'react';\nimport '../ChatScreen.css';\nimport './LeftScreen.css';\nimport './leftChatItem/LeftChatItem.css';\nimport LeftChatItem from './leftChatItem/LeftChatItem';\nimport ChooseNewChat from './ChooseNewChat';\nimport { getFormattedDateString } from \"../Utils\";\nimport { profileImage } from '../../signUp/SignUp';\n/**\r\n * The left side of the chat which holds the list of chats the user is having.\r\n * @param props include the information of the user currently logged-in, the current chosen\r\n * conversation, the list of conversations the user is having and a setter to this list.\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LeftScreen(props) {\n  // Chats holds all the conversations of the current log-in user.\n  var chats = props.currentListOfChats; // Keeping the current log-in user's profile image.\n\n  var logInUserImage = profileImage;\n  var relevantInfo = [];\n  /*\r\n   * For each conversation the current log-in user is having, we create the information\r\n   * needed to be presented on the left side bar, including the contact's name, his profile picture,\r\n   * the last message has been sent in the conversation and the time it was delivered.\r\n  */\n\n  for (var i = 0; i < Object.keys(chats).length; i++) {\n    var usernameInChat = \"\";\n    var nicknameInChat = \"\";\n    var lastMessage = \"\";\n    var message = \"\";\n    var image;\n    var type = \"\";\n    usernameInChat = chats[i].contact.username;\n    nicknameInChat = chats[i].contact.name;\n    image = profileImage; // If there are chats to persent, update their information.\n\n    if (chats[i].messages.length != 0) {\n      if (chats[i].messages[chats[i].messages.length - 1].content != null) {\n        lastMessage = chats[i].messages[chats[i].messages.length - 1].content;\n      }\n\n      type = \"text\";\n      message = chats[i].messages[chats[i].messages.length - 1];\n    }\n\n    relevantInfo.push({\n      nicknameInChat: nicknameInChat,\n      usernameInChat: usernameInChat,\n      type: type,\n      lastMessage: lastMessage,\n      time: getFormattedDateString(message),\n      image: image\n    });\n  } // Keeps the list of conversations that the logged-in user is having.\n\n\n  var conversationsList; // Mapping components of LeftChatItem with the relevant information they are needed.\n\n  conversationsList = props.currentListOfChats.map((conversation, index) => {\n    return /*#__PURE__*/_jsxDEV(LeftChatItem, {\n      conversation: relevantInfo[index],\n      chat: chats[index],\n      currentConversation: props.currentConversation,\n      refer: props.refer,\n      setChat: props.setChat\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-4 leftScreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topLine\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logInUserImage,\n        className: \"float-start top-left-profile-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"top-left-username\",\n        children: props.user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bi bi-person-plus-fill add-conversation ms-3\",\n        \"data-bs-toggle\": \"modal\",\n        \"data-bs-target\": \"#add-new-contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"left-chats-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-col\",\n        id: \"present-left-chat-items\",\n        children: conversationsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChooseNewChat, {\n      user: props.user,\n      logInUsername: props.user.id,\n      conversationsList: conversationsList,\n      listRef: props.listRef,\n      currentListOfChats: props.currentListOfChats,\n      setCurrentListOfChats: props.setCurrentListOfChats,\n      connection: props.connection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_c = LeftScreen;\nexport default LeftScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftScreen\");","map":{"version":3,"sources":["C:/Users/Eitan Koren/oop2/ex2/clientSide/src/chatScreen/leftScreen/LeftScreen.js"],"names":["React","useEffect","LeftChatItem","ChooseNewChat","getFormattedDateString","profileImage","LeftScreen","props","chats","currentListOfChats","logInUserImage","relevantInfo","i","Object","keys","length","usernameInChat","nicknameInChat","lastMessage","message","image","type","contact","username","name","messages","content","push","time","conversationsList","map","conversation","index","currentConversation","refer","setChat","user","id","listRef","setCurrentListOfChats","connection"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport '../ChatScreen.css';\r\nimport './LeftScreen.css';\r\nimport './leftChatItem/LeftChatItem.css';\r\nimport LeftChatItem from './leftChatItem/LeftChatItem';\r\nimport ChooseNewChat from './ChooseNewChat';\r\nimport {getFormattedDateString} from \"../Utils\";\r\nimport { profileImage } from '../../signUp/SignUp';\r\n\r\n/**\r\n * The left side of the chat which holds the list of chats the user is having.\r\n * @param props include the information of the user currently logged-in, the current chosen\r\n * conversation, the list of conversations the user is having and a setter to this list.\r\n */\r\nfunction LeftScreen(props) {\r\n    // Chats holds all the conversations of the current log-in user.\r\n    var chats = props.currentListOfChats;\r\n    // Keeping the current log-in user's profile image.\r\n    var logInUserImage = profileImage;\r\n    var relevantInfo = [];\r\n\r\n    /*\r\n     * For each conversation the current log-in user is having, we create the information\r\n     * needed to be presented on the left side bar, including the contact's name, his profile picture,\r\n     * the last message has been sent in the conversation and the time it was delivered.\r\n    */\r\n    for (var i = 0; i < Object.keys(chats).length; i++) {\r\n        var usernameInChat = \"\";\r\n        var nicknameInChat = \"\"\r\n        var lastMessage = \"\";\r\n        var message = \"\";\r\n        var image;\r\n        var type = \"\";\r\n\r\n        usernameInChat = chats[i].contact.username;\r\n        nicknameInChat = chats[i].contact.name;\r\n        image = profileImage;\r\n\r\n        // If there are chats to persent, update their information.\r\n        if ((chats[i].messages.length)!=0) {\r\n            if (chats[i].messages[chats[i].messages.length - 1].content != null) {\r\n                lastMessage = chats[i].messages[chats[i].messages.length - 1].content;\r\n            }\r\n            type = \"text\";\r\n            message = chats[i].messages[chats[i].messages.length - 1];\r\n        }\r\n        relevantInfo.push({ nicknameInChat: nicknameInChat, usernameInChat: usernameInChat, type: type, lastMessage: lastMessage, time: getFormattedDateString(message), image: image });\r\n    }\r\n\r\n    // Keeps the list of conversations that the logged-in user is having.\r\n    var conversationsList;        \r\n    // Mapping components of LeftChatItem with the relevant information they are needed.\r\n    conversationsList = props.currentListOfChats.map((conversation, index) => {\r\n        return <LeftChatItem conversation={relevantInfo[index]} key={index} chat={chats[index]} currentConversation={props.currentConversation} refer={props.refer} setChat={props.setChat} />\r\n    });\r\n    return (\r\n        <div className=\"col-4 leftScreen\">\r\n            <div className=\"topLine\">\r\n                <img src={logInUserImage} className=\"float-start top-left-profile-image\"></img>\r\n                <h5 className='top-left-username'>{props.user.name}</h5>\r\n                <button className=\"bi bi-person-plus-fill add-conversation ms-3\" data-bs-toggle=\"modal\" data-bs-target=\"#add-new-contact\"></button>\r\n            </div>\r\n            <div className=\"container\" id=\"left-chats-container\">\r\n                <div className=\"center-col\" id=\"present-left-chat-items\">\r\n                    {conversationsList}\r\n                </div>\r\n            </div>\r\n            <ChooseNewChat user={props.user} logInUsername={props.user.id} conversationsList={conversationsList} listRef={props.listRef}\r\n            currentListOfChats={props.currentListOfChats} setCurrentListOfChats={props.setCurrentListOfChats} connection={props.connection}/>\r\n        </div>\r\n    );\r\n}\r\nexport default LeftScreen;"]},"metadata":{},"sourceType":"module"}