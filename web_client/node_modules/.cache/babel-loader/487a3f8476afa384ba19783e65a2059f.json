{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eitan Koren\\\\oop2\\\\ap2\\\\src\\\\logIn\\\\LogIn.js\",\n    _s = $RefreshSig$();\n\nimport './LogIn.css';\nimport users from '../db/UsersDataBase';\nimport ChatScreen from '../chatScreen/ChatScreen';\nimport '../signUp/SignUp.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { getUser } from '../chatScreen/Utils'; // Keeps the current user which will be logged-in to the website.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar user = \"\";\n/**\r\n * Setter to the logged-in user.\r\n * @param initializedUser is an update user logged in the website.\r\n */\n\nfunction setUser(initializedUser) {\n  user = initializedUser;\n}\n\nexport { user, setUser };\n/**\r\n * The LogIn function is the log-in logic. It gives the user an option to log in to the web by\r\n * entering his name and password, and if the fields are valid it enters him into his\r\n * chats screen.\r\n */\n\nfunction LogIn() {\n  _s();\n\n  const navigate = useNavigate();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const username = e.target.userName.value;\n    const password = e.target.password.value;\n    let isValidUser = 0; // If the user exists in the system, change the value of isValidUser to 1.\n\n    users.forEach(user => {\n      if (user.username.localeCompare(username) == 0 && user.password.localeCompare(password) == 0) {\n        isValidUser = 1;\n      }\n    });\n    var alertPlaceholder = document.getElementById('liveAlertPlaceholder');\n    var alertTrigger = document.getElementById('liveAlertBtn');\n    var wrapper = document.createElement('div');\n    /*\r\n     * If the user filled all of the fileds but entered wrong information and clicked on\r\n     * log-in, we present an announcement that the user is not valid.\r\n    */\n\n    if (alertTrigger && isValidUser == 0 && username != \"\" && password != \"\") {\n      var invalidUser = \"Wrong username or password!\";\n      document.getElementById(\"validUser\").innerHTML = invalidUser;\n      return;\n    } // If one of the fiels is empty and the user clicked on the log-in button, write an\n    // announcement.\n\n\n    if (alertTrigger && username == \"\" || password == \"\") {\n      var invalidUser = \"All fields must be filled!\";\n      document.getElementById(\"validUser\").innerHTML = invalidUser;\n      return;\n    }\n\n    user = getUser(username); // navigate(\"chatScreen\", { state: { user: getUsersChats(username) } });\n\n    navigate(\"chatScreen\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"text-center log-in-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"log-in-header\",\n        children: \"Welcome friend, please log in :-)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-floating mb-3 input-style \",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"userName\",\n          className: \"form-control \",\n          id: \"usernameInput\",\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"floatingInput\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-floating input-style \",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          className: \"form-control \",\n          id: \"inputPassword\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          id: \"passwordLabel\",\n          htmlFor: \"floatingPassword\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"validUser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"liveAlertPlaceholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary btn-lg\",\n          id: \"liveAlertBtn\",\n          children: \"Log-in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: [\"Not registered? Please register \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signUp\",\n          className: \"text\",\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LogIn, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LogIn;\nexport default LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["C:/Users/Eitan Koren/oop2/ap2/src/logIn/LogIn.js"],"names":["users","ChatScreen","React","ReactDOM","Link","useNavigate","useParams","getUser","user","setUser","initializedUser","LogIn","navigate","handleSubmit","e","preventDefault","username","target","userName","value","password","isValidUser","forEach","localeCompare","alertPlaceholder","document","getElementById","alertTrigger","wrapper","createElement","invalidUser","innerHTML"],"mappings":"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","sourcesContent":["import './LogIn.css';\r\nimport users from '../db/UsersDataBase';\r\nimport ChatScreen from '../chatScreen/ChatScreen';\r\nimport '../signUp/SignUp.css'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Link, useNavigate, useParams} from \"react-router-dom\";\r\nimport { getUser } from '../chatScreen/Utils';\r\n\r\n// Keeps the current user which will be logged-in to the website.\r\nvar user = \"\";\r\n\r\n/**\r\n * Setter to the logged-in user.\r\n * @param initializedUser is an update user logged in the website.\r\n */\r\nfunction setUser(initializedUser) {\r\n  user = initializedUser;\r\n}\r\nexport {user, setUser};\r\n\r\n/**\r\n * The LogIn function is the log-in logic. It gives the user an option to log in to the web by\r\n * entering his name and password, and if the fields are valid it enters him into his\r\n * chats screen.\r\n */\r\nfunction LogIn() {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const username = e.target.userName.value;\r\n    const password = e.target.password.value;\r\n    let isValidUser = 0;\r\n    // If the user exists in the system, change the value of isValidUser to 1.\r\n    users.forEach(user => {\r\n      if (user.username.localeCompare(username) == 0 && user.password.localeCompare(password) == 0) {\r\n        isValidUser = 1;\r\n      }\r\n    })\r\n\r\n    var alertPlaceholder = document.getElementById('liveAlertPlaceholder');\r\n    var alertTrigger = document.getElementById('liveAlertBtn');\r\n    var wrapper = document.createElement('div');\r\n\r\n    /*\r\n     * If the user filled all of the fileds but entered wrong information and clicked on\r\n     * log-in, we present an announcement that the user is not valid.\r\n    */\r\n    if (alertTrigger && isValidUser == 0 && username != \"\" && password != \"\") {\r\n      var invalidUser = \"Wrong username or password!\"\r\n      document.getElementById(\"validUser\").innerHTML = invalidUser;\r\n      return;\r\n    }\r\n\r\n    // If one of the fiels is empty and the user clicked on the log-in button, write an\r\n    // announcement.\r\n    if (alertTrigger && username == \"\" || password == \"\") {\r\n      var invalidUser = \"All fields must be filled!\"\r\n      document.getElementById(\"validUser\").innerHTML = invalidUser;\r\n      return;\r\n    }\r\n\r\n    user = getUser(username);\r\n    // navigate(\"chatScreen\", { state: { user: getUsersChats(username) } });\r\n    navigate(\"chatScreen\");\r\n  }\r\n  \r\n    return (\r\n        <div className=\"container\" >\r\n            <form className=\"text-center log-in-form\" onSubmit={handleSubmit} >\r\n                <h3 className=\"log-in-header\">Welcome friend, please log in :-)</h3>\r\n\r\n                <div className=\"form-floating mb-3 input-style \">\r\n                    <input type=\"text\" name='userName' className=\"form-control \" id=\"usernameInput\"\r\n                           placeholder=\"Username\"></input>\r\n                    <label className=\"form-label\" htmlFor=\"floatingInput\">Username</label>\r\n                </div>\r\n\r\n                {/*<div className=\"form-group row justify-content-center center-user\">\r\n                    <label htmlFor=\"usernameInput\"\r\n                           className=\"col-sm-2 col-form-label col-form-label-lg\">Username</label>\r\n                    <div className=\"col-sm-5\">\r\n                        <input type=\"text\" name='userName' className=\"form-control form-control-lg\" id=\"usernameInput\"\r\n                               placeholder=\"Enter your username\"></input>\r\n                    </div>\r\n                </div>*/}\r\n                {/*<div className=\"form-group row justify-content-center center-user\">\r\n                    <label htmlFor=\"inputPassword\"\r\n                           className=\"col-sm-2 col-form-label col-form-label-lg\">Password</label>\r\n                    <div className=\"col-sm-5\">\r\n                        <input type=\"password\" name='password' className=\"form-control form-control-lg\"\r\n                               id=\"inputPassword\" placeholder=\"Enter your password\"></input>\r\n                    </div>\r\n                    <div id=\"validUser\"></div>\r\n                </div>*/}\r\n\r\n                <div className=\"form-floating input-style \">\r\n                    <input type=\"password\" name='password' className=\"form-control \" id=\"inputPassword\"\r\n                           placeholder=\"Password\"></input>\r\n                    <label className=\"form-label\" id=\"passwordLabel\" htmlFor=\"floatingPassword\">Password</label>\r\n                    <div id=\"validUser\"></div>\r\n                </div>\r\n\r\n\r\n                <div id=\"liveAlertPlaceholder\"></div>\r\n                <div className=\"mb-3\">\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-lg\" id=\"liveAlertBtn\">Log-in</button>\r\n                </div>\r\n\r\n                <div className=\"text\">\r\n                    Not registered? Please register <Link to='/signUp' className=\"text\">here</Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default LogIn;"]},"metadata":{},"sourceType":"module"}