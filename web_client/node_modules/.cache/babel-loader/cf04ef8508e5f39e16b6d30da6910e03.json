{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eitan Koren\\\\oop2\\\\ap2\\\\src\\\\chatScreen\\\\rightScreen\\\\ChatTextBox.js\";\nimport '../ChatScreen.css';\nimport \"./RightScreen.css\";\nimport { convertToBase64 } from \"../Utils\";\nimport AudioRecorderModal from \"./AudioRecorderModal\";\n/**\r\n * The bottom part of the right part of chat screen from which the user can send messages.\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatTextBox(props) {\n  const handleSendTextClick = () => {\n    //Getting the message typed by the user\n    let message = document.getElementById(\"textBox\").value; //If the user didn't type a message we won't send an empty string, Else we add the message to the chat.\n\n    if (message.trim() !== \"\") {\n      let messageInfo = {\n        type: \"text\",\n        content: message,\n        createdAt: new Date().toISOString(),\n        sender: props.sendingUser.username\n      }; //Appending the message to the end of the messages array.\n\n      let messagesArr = props.chat.messages;\n      messagesArr.push(messageInfo);\n      props.setChat({\n        users: props.chat.users,\n        messages: messagesArr\n      }); //Clearing the chat message box.\n\n      document.getElementById(\"textBox\").value = \"\";\n    }\n  };\n\n  const handleSendImageAndAudio = mediaType => {\n    let input;\n    let file = \"\";\n    if (mediaType === \"image\") input = document.getElementById(\"imageInput\");\n    if (mediaType === \"video\") input = document.getElementById(\"videoInput\");\n    file = input.files[0]; //Convert the image to base64 string and creating the message info.\n\n    var convertPromise = convertToBase64(file);\n    convertPromise.then(function (result) {\n      let messageInfo = {\n        type: mediaType,\n        content: result,\n        createdAt: new Date().toISOString(),\n        sender: props.sendingUser.username\n      }; //Appending the message to the end of the messages array.\n\n      let messagesArr = [...props.chat.messages, messageInfo];\n      props.setChat({\n        users: props.chat.users,\n        messages: messagesArr\n      });\n    });\n    input.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bottom-input-line\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group dropup\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn-lg btn-outline-secondary bottom-btn\",\n        id: \"attachMedia\",\n        \"data-bs-toggle\": \"dropdown\",\n        \"aria-expanded\": \"false\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-paperclip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dropdown-menu attach-ul\",\n        \"aria-labelledby\": \"attachMedia\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"attach-dropup\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-lg btn-outline-secondary float-end bottom-btn attach-btn\",\n              onClick: () => document.getElementById(\"imageInput\").click(),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                display: \"none\"\n              },\n              type: \"file\",\n              accept: \"image/*\",\n              id: \"imageInput\",\n              onChange: () => handleSendImageAndAudio(\"image\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-lg btn-outline-secondary float-end bottom-btn attach-btn\",\n              onClick: () => document.getElementById(\"videoInput\").click(),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-film\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                display: \"none\"\n              },\n              type: \"file\",\n              accept: \"video/*\",\n              id: \"videoInput\",\n              onChange: () => handleSendImageAndAudio(\"video\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              \"data-bs-toggle\": \"modal\",\n              \"data-bs-target\": \"#recordModal\",\n              className: \"btn-lg btn-outline-secondary float-end bottom-btn attach-btn\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-mic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AudioRecorderModal, {\n        chat: props.chat,\n        setChat: props.setChat,\n        sendingUser: props.sendingUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"textBox\",\n      className: \"form-control-lg message-box\",\n      rows: \"1\",\n      placeholder: \"Type a message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn-lg btn-outline-secondary float-end bottom-btn\",\n      onClick: handleSendTextClick,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ChatTextBox;\nexport default ChatTextBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatTextBox\");","map":{"version":3,"sources":["C:/Users/Eitan Koren/oop2/ap2/src/chatScreen/rightScreen/ChatTextBox.js"],"names":["convertToBase64","AudioRecorderModal","ChatTextBox","props","handleSendTextClick","message","document","getElementById","value","trim","messageInfo","type","content","createdAt","Date","toISOString","sender","sendingUser","username","messagesArr","chat","messages","push","setChat","users","handleSendImageAndAudio","mediaType","input","file","files","convertPromise","then","result","click","display"],"mappings":"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","sourcesContent":["import '../ChatScreen.css';\r\nimport \"./RightScreen.css\"\r\nimport {convertToBase64} from \"../Utils\";\r\nimport AudioRecorderModal from \"./AudioRecorderModal\";\r\n\r\n/**\r\n * The bottom part of the right part of chat screen from which the user can send messages.\r\n */\r\nfunction ChatTextBox(props) {\r\n\r\n    const handleSendTextClick = () => {\r\n        //Getting the message typed by the user\r\n        let message = document.getElementById(\"textBox\").value;\r\n        //If the user didn't type a message we won't send an empty string, Else we add the message to the chat.\r\n        if (message.trim() !== \"\") {\r\n            let messageInfo = {\r\n                type: \"text\",\r\n                content: message,\r\n                createdAt: new Date().toISOString(),\r\n                sender: props.sendingUser.username\r\n            }\r\n            //Appending the message to the end of the messages array.\r\n            let messagesArr = props.chat.messages;\r\n            messagesArr.push(messageInfo);\r\n            props.setChat({users: props.chat.users, messages: messagesArr})\r\n            //Clearing the chat message box.\r\n            document.getElementById(\"textBox\").value = \"\";\r\n        }\r\n    }\r\n\r\n    const handleSendImageAndAudio = (mediaType) => {\r\n        let input;\r\n        let file = \"\"\r\n        if (mediaType === \"image\")\r\n            input = document.getElementById(\"imageInput\");\r\n        if (mediaType === \"video\")\r\n            input = document.getElementById(\"videoInput\");\r\n        file = input.files[0]\r\n        //Convert the image to base64 string and creating the message info.\r\n        var convertPromise = convertToBase64(file);\r\n\r\n        convertPromise.then(function (result) {\r\n            let messageInfo = {\r\n                type: mediaType,\r\n                content: result,\r\n                createdAt: new Date().toISOString(),\r\n                sender: props.sendingUser.username\r\n            }\r\n            //Appending the message to the end of the messages array.\r\n            let messagesArr = [...props.chat.messages, messageInfo]\r\n            props.setChat({users: props.chat.users, messages: messagesArr})\r\n        })\r\n        input.value = \"\"\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"bottom-input-line\">\r\n\r\n            {/*audio/video/photo attachment button*/}\r\n            <div className=\"btn-group dropup\">\r\n                <button type=\"button\" className=\"btn-lg btn-outline-secondary bottom-btn\"\r\n                        id=\"attachMedia\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-paperclip\"></i>\r\n                </button>\r\n\r\n                <ul className=\"dropdown-menu attach-ul\" aria-labelledby=\"attachMedia\">\r\n                    <div className=\"attach-dropup\">\r\n                        {/*send image button*/}\r\n                        <li>\r\n                            <button type=\"button\"\r\n                                    className=\"btn-lg btn-outline-secondary float-end bottom-btn attach-btn\"\r\n                                    onClick={() => document.getElementById(\"imageInput\").click()}>\r\n                                <i className=\"bi bi-image\"></i>\r\n                            </button>\r\n                            <input style={{display: \"none\"}} type=\"file\" accept=\"image/*\"\r\n                                   id=\"imageInput\" onChange={() => handleSendImageAndAudio(\"image\")}></input>\r\n\r\n                        </li>\r\n                        {/*send video button*/}\r\n                        <li>\r\n                            <button type=\"button\"\r\n                                    className=\"btn-lg btn-outline-secondary float-end bottom-btn attach-btn\"\r\n                                    onClick={() => document.getElementById(\"videoInput\").click()}>\r\n                                <i className=\"bi bi-film\"></i>\r\n                            </button>\r\n                            <input style={{display: \"none\"}} type=\"file\" accept=\"video/*\"\r\n                                   id=\"videoInput\" onChange={() => handleSendImageAndAudio(\"video\")}></input>\r\n                        </li>\r\n                        {/*send audio record button*/}\r\n                        <li>\r\n                            <button type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#recordModal\"\r\n                                    className=\"btn-lg btn-outline-secondary float-end bottom-btn attach-btn\">\r\n                                <i className=\"bi bi-mic\"></i>\r\n                            </button>\r\n                        </li>\r\n                    </div>\r\n                </ul>\r\n\r\n                {/*audio record modal, shown only when the send audio button is clicked*/}\r\n                <AudioRecorderModal chat={props.chat} setChat={props.setChat}\r\n                                    sendingUser={props.sendingUser}></AudioRecorderModal>\r\n            </div>\r\n\r\n\r\n            {/*text box for writing messages*/}\r\n            <textarea id=\"textBox\" className=\"form-control-lg message-box\" rows=\"1\"\r\n                      placeholder=\"Type a message\"></textarea>\r\n\r\n            {/*send text button*/}\r\n            <button type=\"button\" className=\"btn-lg btn-outline-secondary float-end bottom-btn\"\r\n                    onClick={handleSendTextClick}>\r\n                <i className=\"bi bi-send\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatTextBox;"]},"metadata":{},"sourceType":"module"}