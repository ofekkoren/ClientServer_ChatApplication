{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eitan Koren\\\\oop2\\\\ap2\\\\src\\\\chatScreen\\\\AddNewChat.js\";\nimport conversations from '../db/Conversations';\nimport users from '../db/UsersDataBase';\nimport LeftScreen from './LeftScreen';\nimport LeftChatItem from './leftChatItem/LeftChatItem'; // function ChooseNewChat({logInUsername, conversationsList}) {\n\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddNewChat(logInUsername, conversationsList, newContact, relevantInfo) {\n  var isRegisteredUser = false; // If the user entered his contact's identifier username, do nothing. \n\n  if (logInUsername == newContact) {\n    return;\n  }\n\n  for (var i = 0; i < Object.keys(conversationsList).length; i++) {\n    // If the user already have a conversation with this contact, do nothing.\n    if (conversationsList[i].usernameInChat == newContact) {\n      return;\n    }\n  }\n\n  var user;\n\n  for (var i = 0; i < Object.keys(users).length; i++) {\n    // If the user already have a conversation with this contact, do nothing.\n    if (logInUsername == users[i].username) {\n      user = users[i];\n    }\n  }\n\n  var newConversation;\n\n  for (var i = 0; i < Object.keys(users).length; i++) {\n    // If the user already have a conversation with this contact, do nothing.\n    if (newContact == users[i].username) {\n      isRegisteredUser = true; //add its username, nickname, image\n\n      newConversation = {\n        users: [{\n          username: user.username,\n          nickname: user.nickname,\n          image: user.image\n        }, {\n          username: users[i].username,\n          nickname: users[i].nickname,\n          image: users[i].image\n        }],\n        messages: [{\n          type: \"\",\n          content: \"\",\n          createdAt: \"\"\n        }]\n      };\n    }\n  } //If the user is not registered, do nothing.\n\n\n  if (!isRegisteredUser) {\n    return;\n  } else {\n    var usernameInChat = \"\";\n    var lastMessage = \"\";\n    var time = \"\";\n    var image;\n    var type = \"\";\n    conversations.unshift(newConversation);\n    console.log(conversationsList);\n    lastMessage = newConversation.messages[newConversation.messages.length - 1].content;\n    type = newConversation.messages[conversationsList[i].messages.length - 1].type;\n    time = newConversation.messages[conversationsList[i].messages.length - 1].createdAt;\n    image = newConversation.users[1].image;\n    relevantInfo.push({\n      usernameInChat: newContact,\n      type: type,\n      lastMessage: lastMessage,\n      time: time,\n      image: image\n    });\n    conversationsList = relevantInfo.map((conversation, key) => {\n      return /*#__PURE__*/_createElement(LeftChatItem, { ...conversation,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 20\n        }\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_c = AddNewChat;\nexport default AddNewChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewChat\");","map":{"version":3,"sources":["C:/Users/Eitan Koren/oop2/ap2/src/chatScreen/AddNewChat.js"],"names":["conversations","users","LeftScreen","LeftChatItem","AddNewChat","logInUsername","conversationsList","newContact","relevantInfo","isRegisteredUser","i","Object","keys","length","usernameInChat","user","username","newConversation","nickname","image","messages","type","content","createdAt","lastMessage","time","unshift","console","log","push","map","conversation","key"],"mappings":"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","sourcesContent":["import conversations from '../db/Conversations';\r\nimport users from '../db/UsersDataBase';\r\nimport LeftScreen from './LeftScreen';\r\nimport LeftChatItem from './leftChatItem/LeftChatItem';\r\n\r\n// function ChooseNewChat({logInUsername, conversationsList}) {\r\nfunction AddNewChat(logInUsername, conversationsList, newContact, relevantInfo) {\r\n    var isRegisteredUser = false;\r\n\r\n    // If the user entered his contact's identifier username, do nothing. \r\n    if(logInUsername == newContact){\r\n        return;\r\n    }\r\n    for (var i = 0; i < Object.keys(conversationsList).length; i++) {\r\n        // If the user already have a conversation with this contact, do nothing.\r\n        if(conversationsList[i].usernameInChat == newContact){\r\n            return;\r\n        }\r\n    }\r\n\r\n    var user;\r\n    for (var i = 0; i < Object.keys(users).length; i++) {\r\n        // If the user already have a conversation with this contact, do nothing.\r\n        if(logInUsername == users[i].username){\r\n            user = users[i];\r\n        }\r\n    }\r\n    var newConversation;\r\n    for (var i = 0; i < Object.keys(users).length; i++) {\r\n        // If the user already have a conversation with this contact, do nothing.\r\n        if(newContact == users[i].username){\r\n            isRegisteredUser = true;\r\n            //add its username, nickname, image\r\n            newConversation = {users: [{username: user.username, nickname: user.nickname, image: user.image},\r\n            {username: users[i].username, nickname: users[i].nickname, image: users[i].image}],\r\n            messages:[{type:\"\", content: \"\", createdAt: \"\"}]}\r\n        }\r\n    }\r\n    //If the user is not registered, do nothing.\r\n    if(!isRegisteredUser) {\r\n        return;\r\n    } else {\r\n        var usernameInChat = \"\";\r\n        var lastMessage = \"\";\r\n        var time = \"\";\r\n        var image;\r\n        var type = \"\";\r\n        conversations.unshift(newConversation);\r\n        console.log(conversationsList);\r\n\r\n\r\n        lastMessage = newConversation.messages[newConversation.messages.length - 1].content;\r\n        type = newConversation.messages[conversationsList[i].messages.length - 1].type;\r\n        time = newConversation.messages[conversationsList[i].messages.length - 1].createdAt;\r\n        image = newConversation.users[1].image;\r\n        relevantInfo.push({ usernameInChat: newContact, type: type, lastMessage: lastMessage, time: time, image: image });\r\n\r\n        conversationsList = relevantInfo.map((conversation, key) => {\r\n            return <LeftChatItem {...conversation} key={key} />\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AddNewChat;"]},"metadata":{},"sourceType":"module"}