{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eitan Koren\\\\oop2\\\\ap2\\\\src\\\\chatScreen\\\\AddNewChat.js\";\nimport conversations from '../db/Conversations';\nimport users from '../db/UsersDataBase'; // function ChooseNewChat({logInUsername, conversationsList}) {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddNewChat(_ref) {\n  let {\n    logInUsername,\n    conversationsList,\n    newContact\n  } = _ref;\n  var isRegisteredUser = false; // If the user entered his contact's identifier username, do nothing. \n\n  if (logInUsername == newContact) {\n    return;\n  }\n\n  for (var i = 0; i < Object.keys(conversationsList).length; i++) {\n    // If the user already have a conversation with this contact, do nothing.\n    if (conversationsList[i].usernameInChat == newContact) {\n      return;\n    }\n  }\n\n  var user;\n\n  for (var i = 0; i < Object.keys(users).length; i++) {\n    // If the user already have a conversation with this contact, do nothing.\n    if (logInUsername == users[i].username) {\n      user = users[i];\n    }\n  }\n\n  var newConversation;\n\n  for (var i = 0; i < Object.keys(users).length; i++) {\n    // If the user already have a conversation with this contact, do nothing.\n    if (newContact == users[i].username) {\n      isRegisteredUser = true; //add its username, nickname, image\n\n      newConversation = {\n        users: [{\n          username: user.username,\n          nickname: user.nickname,\n          image: user.image\n        }, {\n          username: users[i].username,\n          nickname: users[i].nickname,\n          image: users[i].image\n        }],\n        messages: [{\n          type: \"\",\n          content: \"\"\n        }]\n      };\n    }\n  } //If the user is not registered, do nothing.\n\n\n  if (!isRegisteredUser) {\n    return;\n  } else {\n    conversations.unshift(newConversation);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_c = AddNewChat;\nexport default AddNewChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewChat\");","map":{"version":3,"sources":["C:/Users/Eitan Koren/oop2/ap2/src/chatScreen/AddNewChat.js"],"names":["conversations","users","AddNewChat","logInUsername","conversationsList","newContact","isRegisteredUser","i","Object","keys","length","usernameInChat","user","username","newConversation","nickname","image","messages","type","content","unshift"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,qBAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB,C,CAEA;;;;AACA,SAASC,UAAT,OAAqE;AAAA,MAAjD;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA;AAApC,GAAiD;AACjE,MAAIC,gBAAgB,GAAG,KAAvB,CADiE,CAGjE;;AACA,MAAGH,aAAa,IAAIE,UAApB,EAA+B;AAC3B;AACH;;AACD,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYL,iBAAZ,EAA+BM,MAAnD,EAA2DH,CAAC,EAA5D,EAAgE;AAC5D;AACA,QAAGH,iBAAiB,CAACG,CAAD,CAAjB,CAAqBI,cAArB,IAAuCN,UAA1C,EAAqD;AACjD;AACH;AACJ;;AAED,MAAIO,IAAJ;;AACA,OAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,MAAvC,EAA+CH,CAAC,EAAhD,EAAoD;AAChD;AACA,QAAGJ,aAAa,IAAIF,KAAK,CAACM,CAAD,CAAL,CAASM,QAA7B,EAAsC;AAClCD,MAAAA,IAAI,GAAGX,KAAK,CAACM,CAAD,CAAZ;AACH;AACJ;;AACD,MAAIO,eAAJ;;AACA,OAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,MAAvC,EAA+CH,CAAC,EAAhD,EAAoD;AAChD;AACA,QAAGF,UAAU,IAAIJ,KAAK,CAACM,CAAD,CAAL,CAASM,QAA1B,EAAmC;AAC/BP,MAAAA,gBAAgB,GAAG,IAAnB,CAD+B,CAE/B;;AACAQ,MAAAA,eAAe,GAAG;AAACb,QAAAA,KAAK,EAAE,CAAC;AAACY,UAAAA,QAAQ,EAAED,IAAI,CAACC,QAAhB;AAA0BE,UAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAzC;AAAmDC,UAAAA,KAAK,EAAEJ,IAAI,CAACI;AAA/D,SAAD,EAC1B;AAACH,UAAAA,QAAQ,EAAEZ,KAAK,CAACM,CAAD,CAAL,CAASM,QAApB;AAA8BE,UAAAA,QAAQ,EAAEd,KAAK,CAACM,CAAD,CAAL,CAASQ,QAAjD;AAA2DC,UAAAA,KAAK,EAAEf,KAAK,CAACM,CAAD,CAAL,CAASS;AAA3E,SAD0B,CAAR;AAElBC,QAAAA,QAAQ,EAAC,CAAC;AAACC,UAAAA,IAAI,EAAC,EAAN;AAAUC,UAAAA,OAAO,EAAE;AAAnB,SAAD;AAFS,OAAlB;AAGH;AACJ,GA/BgE,CAgCjE;;;AACA,MAAG,CAACb,gBAAJ,EAAsB;AAClB;AACH,GAFD,MAEO;AACHN,IAAAA,aAAa,CAACoB,OAAd,CAAsBN,eAAtB;AACH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;KA5CQZ,U;AA8CT,eAAeA,UAAf","sourcesContent":["import conversations from '../db/Conversations';\r\nimport users from '../db/UsersDataBase';\r\n\r\n// function ChooseNewChat({logInUsername, conversationsList}) {\r\nfunction AddNewChat({ logInUsername, conversationsList, newContact}) {\r\n    var isRegisteredUser = false;\r\n\r\n    // If the user entered his contact's identifier username, do nothing. \r\n    if(logInUsername == newContact){\r\n        return;\r\n    }\r\n    for (var i = 0; i < Object.keys(conversationsList).length; i++) {\r\n        // If the user already have a conversation with this contact, do nothing.\r\n        if(conversationsList[i].usernameInChat == newContact){\r\n            return;\r\n        }\r\n    }\r\n\r\n    var user;\r\n    for (var i = 0; i < Object.keys(users).length; i++) {\r\n        // If the user already have a conversation with this contact, do nothing.\r\n        if(logInUsername == users[i].username){\r\n            user = users[i];\r\n        }\r\n    }\r\n    var newConversation;\r\n    for (var i = 0; i < Object.keys(users).length; i++) {\r\n        // If the user already have a conversation with this contact, do nothing.\r\n        if(newContact == users[i].username){\r\n            isRegisteredUser = true;\r\n            //add its username, nickname, image\r\n            newConversation = {users: [{username: user.username, nickname: user.nickname, image: user.image},\r\n            {username: users[i].username, nickname: users[i].nickname, image: users[i].image}],\r\n            messages:[{type:\"\", content: \"\"}]}\r\n        }\r\n    }\r\n    //If the user is not registered, do nothing.\r\n    if(!isRegisteredUser) {\r\n        return;\r\n    } else {\r\n        conversations.unshift(newConversation);\r\n    }\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AddNewChat;"]},"metadata":{},"sourceType":"module"}