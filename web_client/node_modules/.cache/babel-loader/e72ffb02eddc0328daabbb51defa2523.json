{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eitan Koren\\\\oop2\\\\ap2\\\\src\\\\chatScreen\\\\LeftScreen.js\",\n    _s = $RefreshSig$();\n\nimport './ChatScreen.css';\nimport './LeftScreen.css';\nimport './leftChatItem/LeftChatItem.css';\nimport users from '../db/UsersDataBase';\nimport LeftChatItem from './leftChatItem/LeftChatItem';\nimport conversations from '../db/Conversations';\nimport { useState } from \"react\";\nimport ChooseNewChat from './ChooseNewChat';\nimport AddNewChat from './AddNewChat';\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LeftScreen(_ref) {\n  _s();\n\n  let {\n    logInUsername\n  } = _ref;\n  let [currentListOfChats, setcurrentListOfChats] = useState(\"\");\n  let newChatDBRef = useRef(\"\");\n  useEffect(() => {\n    if (currentListOfChats !== \"\") {\n      //If a new message was sent in the current chat we add this message to the corresponding array in our DB.\n      if (currentListOfChats.messages.length !== conversationDBRef.current.messages.length) {} //Scrolling down to the last message when sending a new message or selecting an other chat.\n\n\n      let bottom = document.getElementById(\"lastMessage\");\n      bottom.scrollIntoView({\n        block: \"end\"\n      });\n    }\n  }, [currentConversation]);\n  var numOfConversations = 0;\n  var logInUserImage;\n  /*\r\n   * The function returns the conversations of the current log-in user, according\r\n   * to the username (his id). \r\n  */\n\n  function getUsersChats(logInUsername) {\n    for (var i = 0; i < Object.keys(users).length; i++) {\n      if (users[i].username.localeCompare(logInUsername) === 0) {\n        // numOfConversations = Object.keys(users[i].chats).length;\n        return users[i];\n      }\n    }\n  } // Chats holds all the conversations of the current log-in user.\n\n\n  var chats = getUsersChats(logInUsername).chats; // Keeping the current log-in user's profile image.\n\n  logInUserImage = getUsersChats(logInUsername).image;\n  var relevantInfo = [];\n  var usernameInChat = \"\";\n  var lastMessage = \"\";\n  var time = \"\";\n  var image;\n  var type = \"\";\n  /*\r\n   * For each conversation the current log-in user is having, we create the information\r\n   * needed to be presented on the left side bar, including the contact's name, his profile picture,\r\n   * the last message has been sent in the conversation and the time it was delivered.\r\n  */\n\n  for (var i = 0; i < Object.keys(chats).length; i++) {\n    // If the username in the conversation information is our log-in username, the other username is the\n    // contact's username.\n    if (chats[i].users[0].username.localeCompare(logInUsername) == 0) {\n      usernameInChat = chats[i].users[1].username;\n    } else {\n      usernameInChat = chats[i].users[0].username;\n    }\n\n    lastMessage = chats[i].messages[chats[i].messages.length - 1].content;\n    type = chats[i].messages[chats[i].messages.length - 1].type;\n    time = chats[i].messages[chats[i].messages.length - 1].createdAt;\n    image = getUsersChats(usernameInChat).image;\n    relevantInfo.push({\n      usernameInChat: usernameInChat,\n      type: type,\n      lastMessage: lastMessage,\n      time: time,\n      image: image\n    });\n  }\n\n  var conversationsList;\n  conversationsList = relevantInfo.map((conversation, key) => {\n    return /*#__PURE__*/_createElement(LeftChatItem, { ...conversation,\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 16\n      }\n    });\n  }); // function callChooseNewChat() {\n  //     return ChooseNewChat();\n  //     // <ChooseNewChat />\n  // }\n  // console.log(conversationsList);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-4 leftScreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topLine topLine-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bi bi-person-plus-fill add-conversation ms-3\",\n        \"data-bs-toggle\": \"modal\",\n        \"data-bs-target\": \"#add-new-contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logInUserImage,\n        className: \"row float-start profile-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"top-left-username\",\n        children: logInUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-col\",\n        id: \"present-left-chat-items\",\n        children: conversationsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChooseNewChat, {\n      logInUsername: logInUsername,\n      conversationsList: conversationsList,\n      relevantInfo: relevantInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LeftScreen, \"FCpsQKJsumwfHIE4z/AfNTlDVt8=\");\n\n_c = LeftScreen;\nexport default LeftScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftScreen\");","map":{"version":3,"sources":["C:/Users/Eitan Koren/oop2/ap2/src/chatScreen/LeftScreen.js"],"names":["users","LeftChatItem","conversations","useState","ChooseNewChat","AddNewChat","LeftScreen","logInUsername","currentListOfChats","setcurrentListOfChats","newChatDBRef","useRef","useEffect","messages","length","conversationDBRef","current","bottom","document","getElementById","scrollIntoView","block","currentConversation","numOfConversations","logInUserImage","getUsersChats","i","Object","keys","username","localeCompare","chats","image","relevantInfo","usernameInChat","lastMessage","time","type","content","createdAt","push","conversationsList","map","conversation","key"],"mappings":"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","sourcesContent":["import './ChatScreen.css';\r\nimport './LeftScreen.css';\r\nimport './leftChatItem/LeftChatItem.css';\r\nimport users from '../db/UsersDataBase';\r\nimport LeftChatItem from './leftChatItem/LeftChatItem';\r\nimport conversations from '../db/Conversations';\r\nimport { useState } from \"react\";\r\nimport ChooseNewChat from './ChooseNewChat';\r\nimport AddNewChat from './AddNewChat';\r\n\r\n\r\nfunction LeftScreen({ logInUsername }) {\r\n\r\n    let [currentListOfChats, setcurrentListOfChats] = useState(\"\");\r\n    let newChatDBRef = useRef(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentListOfChats !== \"\") {\r\n            //If a new message was sent in the current chat we add this message to the corresponding array in our DB.\r\n            if (currentListOfChats.messages.length !== conversationDBRef.current.messages.length) {\r\n            }\r\n            //Scrolling down to the last message when sending a new message or selecting an other chat.\r\n            let bottom = document.getElementById(\"lastMessage\");\r\n            bottom.scrollIntoView({block:\"end\"});\r\n        }\r\n    }, [currentConversation])\r\n\r\n\r\n\r\n    var numOfConversations = 0;\r\n    var logInUserImage;\r\n\r\n    /*\r\n     * The function returns the conversations of the current log-in user, according\r\n     * to the username (his id). \r\n    */\r\n    function getUsersChats(logInUsername) {\r\n        for (var i = 0; i < Object.keys(users).length; i++) {\r\n            if (users[i].username.localeCompare(logInUsername) === 0) {\r\n                // numOfConversations = Object.keys(users[i].chats).length;\r\n                return users[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    // Chats holds all the conversations of the current log-in user.\r\n    var chats = getUsersChats(logInUsername).chats;\r\n    // Keeping the current log-in user's profile image.\r\n    logInUserImage = getUsersChats(logInUsername).image;\r\n\r\n    var relevantInfo = [];\r\n    var usernameInChat = \"\";\r\n    var lastMessage = \"\";\r\n    var time = \"\";\r\n    var image;\r\n    var type = \"\";\r\n\r\n    /*\r\n     * For each conversation the current log-in user is having, we create the information\r\n     * needed to be presented on the left side bar, including the contact's name, his profile picture,\r\n     * the last message has been sent in the conversation and the time it was delivered.\r\n    */\r\n    for (var i = 0; i < Object.keys(chats).length; i++) {\r\n        // If the username in the conversation information is our log-in username, the other username is the\r\n        // contact's username.\r\n        if (chats[i].users[0].username.localeCompare(logInUsername) == 0) {\r\n            usernameInChat = chats[i].users[1].username;\r\n        } else {\r\n            usernameInChat = chats[i].users[0].username;\r\n        }\r\n        lastMessage = chats[i].messages[chats[i].messages.length - 1].content;\r\n        type = chats[i].messages[chats[i].messages.length - 1].type;\r\n        time = chats[i].messages[chats[i].messages.length - 1].createdAt;\r\n        image = getUsersChats(usernameInChat).image;\r\n        relevantInfo.push({ usernameInChat: usernameInChat, type: type, lastMessage: lastMessage, time: time, image: image });\r\n    }\r\n\r\n\r\n    var conversationsList;\r\n    conversationsList = relevantInfo.map((conversation, key) => {\r\n        return <LeftChatItem {...conversation} key={key} />\r\n    });\r\n\r\n    // function callChooseNewChat() {\r\n    //     return ChooseNewChat();\r\n    //     // <ChooseNewChat />\r\n    // }\r\n    // console.log(conversationsList);\r\n    return (\r\n        <div className=\"col-4 leftScreen\">\r\n            <div className=\"topLine topLine-left\">\r\n                <button className=\"bi bi-person-plus-fill add-conversation ms-3\" data-bs-toggle=\"modal\" data-bs-target=\"#add-new-contact\"></button>\r\n                {/* <img src={logInUserImage} className=\"row float-start top-profile-image\"></img> */}\r\n                <img src={logInUserImage} className=\"row float-start profile-image\"></img>\r\n                <h5 className='top-left-username'>{logInUsername}</h5>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"center-col\" id=\"present-left-chat-items\">\r\n                    {conversationsList}\r\n                </div>\r\n            </div>\r\n\r\n            <ChooseNewChat logInUsername={logInUsername} conversationsList={conversationsList} relevantInfo={relevantInfo} />\r\n            {/* <AddNewChat usernameInChat=\"Shir Levi\" type=\"text\" lastMessage=\"hry\" time=\"\" image={logInUserImage}/> */}\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default LeftScreen;"]},"metadata":{},"sourceType":"module"}