{"ast":null,"code":"import React from 'react';\nimport conversations from '../../db/Conversations';\nimport users from '../../db/UsersDataBase';\nimport LeftScreen from './LeftScreen';\nimport LeftChatItem from './leftChatItem/LeftChatItem';\nimport ChooseNewChat from './ChooseNewChat';\n/**\r\n * The function recieves new contact's username, and checks if it is a valid\r\n * username in the DB.\r\n * @param props include the username of the user currently logged-in, the username\r\n * that the user is wishing to talk to, the array of conversations the log-in user\r\n * is having and a setter to this array.\r\n */\n\nfunction AddNewChat(props) {\n  var isRegisteredUser = false; // If the user entered his own contact's identifier username, do nothing. \n\n  if (props.logInUsername === props.newContact) {\n    return;\n  }\n\n  for (var i = 0; i < Object.keys(props.conversationsList).length; i++) {\n    // If the user already have a conversation with this contact, do nothing.\n    if (props.conversationsList[i].props.conversation.usernameInChat === props.newContact) {\n      var invalidUser = \"this user is already talking with you!\";\n      document.getElementById(\"validation\").innerHTML = invalidUser;\n      return;\n    }\n  }\n\n  var user;\n\n  for (var i = 0; i < Object.keys(users).length; i++) {\n    if (props.logInUsername == users[i].username) {\n      user = users[i];\n    }\n  }\n\n  var newConversation;\n\n  for (var i = 0; i < Object.keys(users).length; i++) {\n    if (props.newContact === users[i].username) {\n      isRegisteredUser = true; // Add the new contact's username, nickname and profile image.\n\n      newConversation = {\n        users: [{\n          username: user.username,\n          nickname: user.nickname,\n          image: user.image\n        }, {\n          username: users[i].username,\n          nickname: users[i].nickname,\n          image: users[i].image\n        }],\n        messages: []\n      };\n    }\n  } //If the user is not registered, announce it is invalid username.\n\n\n  if (!isRegisteredUser) {\n    var invalidUser = \"invalid user!\";\n    document.getElementById(\"validation\").innerHTML = invalidUser;\n    return;\n  } else {\n    var invalidUser = \"user added successfully!\";\n    document.getElementById(\"validation\").innerHTML = invalidUser;\n    return newConversation;\n  }\n}\n\n_c = AddNewChat;\nexport default AddNewChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewChat\");","map":{"version":3,"sources":["C:/Users/Eitan Koren/oop2/ap2/src/chatScreen/leftScreen/AddNewChat.js"],"names":["React","conversations","users","LeftScreen","LeftChatItem","ChooseNewChat","AddNewChat","props","isRegisteredUser","logInUsername","newContact","i","Object","keys","conversationsList","length","conversation","usernameInChat","invalidUser","document","getElementById","innerHTML","user","username","newConversation","nickname","image","messages"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,MAAIC,gBAAgB,GAAG,KAAvB,CADuB,CAEvB;;AACA,MAAID,KAAK,CAACE,aAAN,KAAwBF,KAAK,CAACG,UAAlC,EAA8C;AAC1C;AACH;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACO,iBAAlB,EAAqCC,MAAzD,EAAiEJ,CAAC,EAAlE,EAAsE;AAClE;AACA,QAAIJ,KAAK,CAACO,iBAAN,CAAwBH,CAAxB,EAA2BJ,KAA3B,CAAiCS,YAAjC,CAA8CC,cAA9C,KAAiEV,KAAK,CAACG,UAA3E,EAAuF;AACnF,UAAIQ,WAAW,GAAG,wCAAlB;AACAC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,SAAtC,GAAkDH,WAAlD;AACA;AACH;AACJ;;AAED,MAAII,IAAJ;;AACA,OAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYX,KAAZ,EAAmBa,MAAvC,EAA+CJ,CAAC,EAAhD,EAAoD;AAChD,QAAIJ,KAAK,CAACE,aAAN,IAAuBP,KAAK,CAACS,CAAD,CAAL,CAASY,QAApC,EAA8C;AAC1CD,MAAAA,IAAI,GAAGpB,KAAK,CAACS,CAAD,CAAZ;AACH;AACJ;;AAED,MAAIa,eAAJ;;AACA,OAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYX,KAAZ,EAAmBa,MAAvC,EAA+CJ,CAAC,EAAhD,EAAoD;AAEhD,QAAIJ,KAAK,CAACG,UAAN,KAAqBR,KAAK,CAACS,CAAD,CAAL,CAASY,QAAlC,EAA4C;AACxCf,MAAAA,gBAAgB,GAAG,IAAnB,CADwC,CAExC;;AACAgB,MAAAA,eAAe,GAAG;AACdtB,QAAAA,KAAK,EAAE,CAAC;AAAEqB,UAAAA,QAAQ,EAAED,IAAI,CAACC,QAAjB;AAA2BE,UAAAA,QAAQ,EAAEH,IAAI,CAACG,QAA1C;AAAoDC,UAAAA,KAAK,EAAEJ,IAAI,CAACI;AAAhE,SAAD,EACP;AAAEH,UAAAA,QAAQ,EAAErB,KAAK,CAACS,CAAD,CAAL,CAASY,QAArB;AAA+BE,UAAAA,QAAQ,EAAEvB,KAAK,CAACS,CAAD,CAAL,CAASc,QAAlD;AAA4DC,UAAAA,KAAK,EAAExB,KAAK,CAACS,CAAD,CAAL,CAASe;AAA5E,SADO,CADO;AAGdC,QAAAA,QAAQ,EAAE;AAHI,OAAlB;AAKH;AACJ,GAnCsB,CAuCvB;;;AACA,MAAI,CAACnB,gBAAL,EAAuB;AACnB,QAAIU,WAAW,GAAG,eAAlB;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,SAAtC,GAAkDH,WAAlD;AACA;AACH,GAJD,MAIO;AACH,QAAIA,WAAW,GAAG,0BAAlB;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,SAAtC,GAAkDH,WAAlD;AACA,WAAOM,eAAP;AACH;AACJ;;KAjDQlB,U;AAmDT,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport conversations from '../../db/Conversations';\r\nimport users from '../../db/UsersDataBase';\r\nimport LeftScreen from './LeftScreen';\r\nimport LeftChatItem from './leftChatItem/LeftChatItem';\r\nimport ChooseNewChat from './ChooseNewChat';\r\n\r\n\r\n/**\r\n * The function recieves new contact's username, and checks if it is a valid\r\n * username in the DB.\r\n * @param props include the username of the user currently logged-in, the username\r\n * that the user is wishing to talk to, the array of conversations the log-in user\r\n * is having and a setter to this array.\r\n */\r\nfunction AddNewChat(props) {\r\n    var isRegisteredUser = false;\r\n    // If the user entered his own contact's identifier username, do nothing. \r\n    if (props.logInUsername === props.newContact) {\r\n        return;\r\n    }\r\n\r\n    for (var i = 0; i < Object.keys(props.conversationsList).length; i++) {\r\n        // If the user already have a conversation with this contact, do nothing.\r\n        if (props.conversationsList[i].props.conversation.usernameInChat === props.newContact) {\r\n            var invalidUser = \"this user is already talking with you!\"\r\n            document.getElementById(\"validation\").innerHTML = invalidUser;\r\n            return;\r\n        }\r\n    }\r\n\r\n    var user;\r\n    for (var i = 0; i < Object.keys(users).length; i++) {\r\n        if (props.logInUsername == users[i].username) {\r\n            user = users[i];\r\n        }\r\n    }\r\n\r\n    var newConversation;\r\n    for (var i = 0; i < Object.keys(users).length; i++) {\r\n\r\n        if (props.newContact === users[i].username) {\r\n            isRegisteredUser = true;\r\n            // Add the new contact's username, nickname and profile image.\r\n            newConversation = {\r\n                users: [{ username: user.username, nickname: user.nickname, image: user.image },\r\n                { username: users[i].username, nickname: users[i].nickname, image: users[i].image }],\r\n                messages: []\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //If the user is not registered, announce it is invalid username.\r\n    if (!isRegisteredUser) {\r\n        var invalidUser = \"invalid user!\"\r\n        document.getElementById(\"validation\").innerHTML = invalidUser;\r\n        return;\r\n    } else {\r\n        var invalidUser = \"user added successfully!\"\r\n        document.getElementById(\"validation\").innerHTML = invalidUser;\r\n        return newConversation;\r\n    }\r\n}\r\n\r\nexport default AddNewChat;"]},"metadata":{},"sourceType":"module"}