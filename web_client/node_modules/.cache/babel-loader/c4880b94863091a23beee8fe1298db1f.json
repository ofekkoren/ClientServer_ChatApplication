{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eitan Koren\\\\oop2\\\\ap2\\\\src\\\\chatScreen\\\\leftChatItem\\\\LeftChatItem.js\";\nimport './LeftChatItem.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LeftChatItem(props) {\n  console.log(props.refer);\n  var lastMessagePresented = \"\";\n  var iconClassName = \"\"; // If the type of the message is image, we present the string \"image\" and an image icon next to it as the last message.\n\n  if (props.conversation.type == \"image\") {\n    lastMessagePresented = \"image\";\n    iconClassName = \"bi bi-image\";\n  } // If the type of the message is record, we present the string \"voice recording\" and a mic icon next to it as the last message.\n  else if (props.conversation.type == \"audio\") {\n    lastMessagePresented = \"voice recording\";\n    iconClassName = \"bi bi-mic-fill\";\n  } // If the type of the message is video, we present the string \"video\" and a camera-video icon next to it as the last message.\n  else if (props.conversation.type == \"video\") {\n    lastMessagePresented = \"video\";\n    iconClassName = \"bi bi-camera-video-fill\";\n  } // If the type of the message is text (the last type of message), we present the last message sent with no icon.\n  else {\n    lastMessagePresented = props.conversation.lastMessage;\n  }\n\n  function showChat(chat) {\n    // console.log(props.refer)\n    props.refer.current = chat;\n    props.setChat(chat);\n  } //DOTO - ERASE\n  // console.log(conversation.lastMessage);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"left-chat-item\",\n    onClick: () => showChat(props.chat),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.conversation.image,\n      className: \"chat-profile-image top-profile-image float-start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"chat-member-name\",\n      children: props.conversation.nicknameInChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"last-message-time\",\n      children: props.conversation.time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"chat-last-message\",\n      children: [lastMessagePresented, \"\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: iconClassName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_c = LeftChatItem;\nexport default LeftChatItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftChatItem\");","map":{"version":3,"sources":["C:/Users/Eitan Koren/oop2/ap2/src/chatScreen/leftChatItem/LeftChatItem.js"],"names":["React","LeftChatItem","props","console","log","refer","lastMessagePresented","iconClassName","conversation","type","lastMessage","showChat","chat","current","setChat","image","nicknameInChat","time"],"mappings":";AAAA,OAAO,oBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;AAEA,MAAIC,oBAAoB,GAAE,EAA1B;AACA,MAAIC,aAAa,GAAG,EAApB,CAJyB,CAMzB;;AACA,MAAGL,KAAK,CAACM,YAAN,CAAmBC,IAAnB,IAA2B,OAA9B,EAAuC;AACnCH,IAAAA,oBAAoB,GAAG,OAAvB;AACAC,IAAAA,aAAa,GAAG,aAAhB;AACH,GAHD,CAIA;AAJA,OAKK,IAAIL,KAAK,CAACM,YAAN,CAAmBC,IAAnB,IAA2B,OAA/B,EAAwC;AACzCH,IAAAA,oBAAoB,GAAG,iBAAvB;AACAC,IAAAA,aAAa,GAAG,gBAAhB;AACH,GAHI,CAIL;AAJK,OAKA,IAAIL,KAAK,CAACM,YAAN,CAAmBC,IAAnB,IAA2B,OAA/B,EAAwC;AACzCH,IAAAA,oBAAoB,GAAG,OAAvB;AACAC,IAAAA,aAAa,GAAG,yBAAhB;AACH,GAHI,CAKL;AALK,OAMA;AACDD,IAAAA,oBAAoB,GAAGJ,KAAK,CAACM,YAAN,CAAmBE,WAA1C;AACH;;AAED,WAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpB;AACAV,IAAAA,KAAK,CAACG,KAAN,CAAYQ,OAAZ,GAAsBD,IAAtB;AACAV,IAAAA,KAAK,CAACY,OAAN,CAAcF,IAAd;AACH,GA/BwB,CAiCzB;AACA;;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,OAAO,EAAE,MAAKD,QAAQ,CAACT,KAAK,CAACU,IAAP,CAAtD;AAAA,4BAGI;AAAK,MAAA,GAAG,EAAEV,KAAK,CAACM,YAAN,CAAmBO,KAA7B;AAAoC,MAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA,gBAAoCb,KAAK,CAACM,YAAN,CAAmBQ;AAAvD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA,gBAAqCd,KAAK,CAACM,YAAN,CAAmBS;AAAxD;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAG,MAAA,SAAS,EAAC,mBAAb;AAAA,iBAAkCX,oBAAlC,uBACA;AAAG,QAAA,SAAS,EAAEC;AAAd;AAAA;AAAA;AAAA;AAAA,cADA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;KAhDQN,Y;AAiDT,eAAeA,YAAf","sourcesContent":["import './LeftChatItem.css';\r\nimport React from 'react';\r\n\r\n\r\nfunction LeftChatItem(props) {\r\n    console.log(props.refer);\r\n\r\n    var lastMessagePresented= \"\";\r\n    var iconClassName = \"\";\r\n\r\n    // If the type of the message is image, we present the string \"image\" and an image icon next to it as the last message.\r\n    if(props.conversation.type == \"image\") {\r\n        lastMessagePresented = \"image\";\r\n        iconClassName = \"bi bi-image\";\r\n    } \r\n    // If the type of the message is record, we present the string \"voice recording\" and a mic icon next to it as the last message.\r\n    else if (props.conversation.type == \"audio\") {\r\n        lastMessagePresented = \"voice recording\";\r\n        iconClassName = \"bi bi-mic-fill\";\r\n    }\r\n    // If the type of the message is video, we present the string \"video\" and a camera-video icon next to it as the last message.\r\n    else if (props.conversation.type == \"video\") {\r\n        lastMessagePresented = \"video\";\r\n        iconClassName = \"bi bi-camera-video-fill\"\r\n    } \r\n    \r\n    // If the type of the message is text (the last type of message), we present the last message sent with no icon.\r\n    else {\r\n        lastMessagePresented = props.conversation.lastMessage;\r\n    }\r\n\r\n    function showChat(chat) {\r\n        // console.log(props.refer)\r\n        props.refer.current = chat;\r\n        props.setChat(chat);\r\n    }\r\n\r\n    //DOTO - ERASE\r\n    // console.log(conversation.lastMessage);\r\n    return (\r\n        <div className='left-chat-item' onClick={()=> showChat(props.chat)}>\r\n                    {/* <div className='left-chat-item'> */}\r\n\r\n            <img src={props.conversation.image} className=\"chat-profile-image top-profile-image float-start\"></img>\r\n            <span className=\"chat-member-name\">{props.conversation.nicknameInChat}</span>\r\n            <span className='last-message-time'>{props.conversation.time}</span>\r\n            <p className=\"chat-last-message\">{lastMessagePresented}&nbsp;\r\n            <i className={iconClassName}></i>\r\n            </p>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default LeftChatItem;"]},"metadata":{},"sourceType":"module"}