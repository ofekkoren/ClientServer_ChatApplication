{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eitan Koren\\\\oop2\\\\ex2\\\\clientSide\\\\src\\\\signUp\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport '../logIn/LogIn.css';\nimport './SignUp.css';\nimport { convertToBase64, getUser } from \"../chatScreen/Utils\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport React from \"react\";\nimport { user, setUser } from '../logIn/LogIn'; // Keeps the current user which will be logged-in to the website.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar profileImage = \"/images/userImages/defaultImage.png\";\nexport { profileImage };\n/**\r\n * A sign-up form for the chat app.\r\n */\n\nfunction SignUp() {\n  _s();\n\n  const navigate = useNavigate();\n  /**\r\n   * Setting an invalid class and invalid feedback for element.\r\n   * @param element the element that will have an invalid feedback.\r\n   * @param message the message of the feedback.\r\n   */\n\n  const setValid = (element, message) => {\n    const inputParent = element.parentElement;\n    element.classList.add('is-valid');\n    element.classList.remove('is-invalid');\n    const validationMessage = inputParent.getElementsByClassName(\"validation-helper\")[0];\n    validationMessage.classList.add('valid-feedback');\n    validationMessage.classList.remove('invalid-feedback');\n    validationMessage.innerText = message;\n  };\n  /**\r\n   * Setting a valid class and valid feedback for element.\r\n   * @param element the element that will have a valid feedback.\r\n   * @param message the message of the feedback.\r\n   */\n\n\n  const setInvalid = (element, message) => {\n    const inputParent = element.parentElement;\n    element.classList.add('is-invalid');\n    element.classList.remove('is-valid');\n    const validationMessage = inputParent.getElementsByClassName(\"validation-helper\")[0];\n    validationMessage.classList.add('invalid-feedback');\n    validationMessage.classList.remove('valid-feedback');\n    validationMessage.innerText = message;\n  };\n  /**\r\n   * Checking if the data filled by the user in a form is valid.\r\n   * @returns true if all the data is valid. Else, false is returned.\r\n   */\n\n\n  const checkValid = validationData => {\n    //getting the user input elements.\n    const userName = document.getElementById('username');\n    const nickName = document.getElementById('nickname');\n    const password = document.getElementById('Password');\n    const passwordRepeat = document.getElementById('validatePassword');\n    const valid = \"valid\";\n    let isValid = true; //Checking the username. We want it to be unique and not an empty string.\n\n    if (validationData.usernameV === valid) setValid(userName, \"This username is available\");else {\n      setInvalid(userName, validationData.usernameV);\n      isValid = false;\n    } //Checking the nickname. We don't allow empty string as nickname.\n\n    if (validationData.nicknameV === valid) setValid(nickName, \"Nice Nickname!\");else {\n      setInvalid(nickName, validationData.nicknameV);\n      isValid = false;\n    }\n    /*\r\n     * Checking the password chosen by the user. It must be longer than 6 character and contain al least one letter\r\n     * and one number.\r\n     */\n\n    if (validationData.passwordV === valid) setValid(password, \"Good password\");else {\n      setInvalid(password, validationData.passwordV);\n      isValid = false;\n    }\n    if (validationData.repeatPasswordV === valid) setValid(passwordRepeat, \"\");else {\n      setInvalid(passwordRepeat, validationData.repeatPasswordV);\n      isValid = false;\n    }\n    return isValid;\n  };\n  /**\r\n   * Handling the submission of the registration form.\r\n   * @param event the submit event.\r\n   */\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newUserName = document.getElementById(\"username\").value.trim();\n    const newNickName = document.getElementById('nickname').value.trim();\n    const newPassword = document.getElementById('Password').value;\n    const repeatPassword = document.getElementById('validatePassword').value;\n    fetch(\"http://localhost:5170/api/SignUp\", {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: newUserName.toString(),\n        nickname: newNickName.toString(),\n        password: newPassword.toString(),\n        repeatPassword: repeatPassword.toString()\n      })\n    }).then(response => {\n      response.json().then(async validationData => {\n        // Setting the current user and redirecting the user to the chat if the sign-up was successful.\n        if (checkValid(validationData)) {\n          var newUser = await getUser(newUserName.toString());\n          setUser(newUser);\n          navigate(\"../chatScreen\");\n        }\n      });\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    //The sign-up form.\n    _jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"signContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"text-center sign-up-form needs-validation\",\n        noValidate: true,\n        id: \"signUpForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"log-in-header\",\n          children: \"We need more friends, please join us ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-floating mb-3 input-style \",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"userName\",\n            className: \"form-control input-box-size\",\n            id: \"username\",\n            placeholder: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"validation-helper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-floating mb-3 input-style \",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"userName\",\n            className: \"form-control \",\n            id: \"nickname\",\n            placeholder: \"nickname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"nickname\",\n            children: \"nickname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"validation-helper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-floating mb-3 input-style \",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"Password\",\n            className: \"form-control \",\n            id: \"Password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"Password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"validation-helper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-floating mb-3 input-style \",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"validatePassword\",\n            className: \"form-control \",\n            id: \"validatePassword\",\n            placeholder: \"Repeat password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"validatePassword\",\n            children: \"Repeat password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"validation-helper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary btn-lg\",\n            children: \"Sign-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [\"already registered? log in \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"text\",\n            children: \"here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [\"You are welcome to \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:5189/Ranks\",\n            children: \"Rate us\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(SignUp, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/Eitan Koren/oop2/ex2/clientSide/src/signUp/SignUp.js"],"names":["convertToBase64","getUser","Link","useNavigate","React","user","setUser","profileImage","SignUp","navigate","setValid","element","message","inputParent","parentElement","classList","add","remove","validationMessage","getElementsByClassName","innerText","setInvalid","checkValid","validationData","userName","document","getElementById","nickName","password","passwordRepeat","valid","isValid","usernameV","nicknameV","passwordV","repeatPasswordV","handleSubmit","event","preventDefault","stopPropagation","newUserName","value","trim","newNickName","newPassword","repeatPassword","fetch","method","credentials","headers","body","JSON","stringify","username","toString","nickname","then","response","json","newUser"],"mappings":"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","sourcesContent":["import '../logIn/LogIn.css';\r\nimport './SignUp.css'\r\nimport {convertToBase64, getUser} from \"../chatScreen/Utils\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {user, setUser} from '../logIn/LogIn';\r\n// Keeps the current user which will be logged-in to the website.\r\n\r\nvar profileImage = \"/images/userImages/defaultImage.png\";\r\nexport {profileImage};\r\n\r\n\r\n\r\n/**\r\n * A sign-up form for the chat app.\r\n */\r\nfunction SignUp() {\r\n    const navigate = useNavigate();\r\n\r\n    /**\r\n     * Setting an invalid class and invalid feedback for element.\r\n     * @param element the element that will have an invalid feedback.\r\n     * @param message the message of the feedback.\r\n     */\r\n    const setValid = (element, message) => {\r\n        const inputParent = element.parentElement;\r\n        element.classList.add('is-valid');\r\n        element.classList.remove('is-invalid')\r\n        const validationMessage = inputParent.getElementsByClassName(\"validation-helper\")[0];\r\n        validationMessage.classList.add('valid-feedback');\r\n        validationMessage.classList.remove('invalid-feedback')\r\n        validationMessage.innerText = message;\r\n    };\r\n\r\n    /**\r\n     * Setting a valid class and valid feedback for element.\r\n     * @param element the element that will have a valid feedback.\r\n     * @param message the message of the feedback.\r\n     */\r\n    const setInvalid = (element, message) => {\r\n        const inputParent = element.parentElement;\r\n        element.classList.add('is-invalid');\r\n        element.classList.remove('is-valid')\r\n        const validationMessage = inputParent.getElementsByClassName(\"validation-helper\")[0];\r\n        validationMessage.classList.add('invalid-feedback');\r\n        validationMessage.classList.remove('valid-feedback')\r\n        validationMessage.innerText = message;\r\n\r\n    }\r\n\r\n    /**\r\n     * Checking if the data filled by the user in a form is valid.\r\n     * @returns true if all the data is valid. Else, false is returned.\r\n     */\r\n    const checkValid = (validationData) => {\r\n        //getting the user input elements.\r\n        const userName = document.getElementById('username');\r\n        const nickName = document.getElementById('nickname');\r\n        const password = document.getElementById('Password');\r\n        const passwordRepeat = document.getElementById('validatePassword');\r\n        const valid = \"valid\"\r\n        let isValid = true;\r\n        //Checking the username. We want it to be unique and not an empty string.\r\n        if (validationData.usernameV === valid)\r\n            setValid(userName, \"This username is available\");\r\n        else {\r\n            setInvalid(userName, validationData.usernameV);\r\n            isValid = false;\r\n        }\r\n\r\n        //Checking the nickname. We don't allow empty string as nickname.\r\n        if (validationData.nicknameV === valid)\r\n            setValid(nickName, \"Nice Nickname!\");\r\n        else {\r\n            setInvalid(nickName, validationData.nicknameV);\r\n            isValid = false;\r\n        }\r\n\r\n        /*\r\n         * Checking the password chosen by the user. It must be longer than 6 character and contain al least one letter\r\n         * and one number.\r\n         */\r\n        if (validationData.passwordV === valid)\r\n            setValid(password, \"Good password\");\r\n        else {\r\n            setInvalid(password, validationData.passwordV);\r\n            isValid = false;\r\n        }\r\n\r\n        if (validationData.repeatPasswordV === valid)\r\n            setValid(passwordRepeat, \"\");\r\n        else {\r\n            setInvalid(passwordRepeat, validationData.repeatPasswordV);\r\n            isValid = false;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    /**\r\n     * Handling the submission of the registration form.\r\n     * @param event the submit event.\r\n     */\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation()\r\n        const newUserName = document.getElementById(\"username\").value.trim();\r\n        const newNickName = document.getElementById('nickname').value.trim();\r\n        const newPassword = document.getElementById('Password').value;\r\n        const repeatPassword = document.getElementById('validatePassword').value;\r\n        fetch(\"http://localhost:5170/api/SignUp\",\r\n            {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                headers: {'Content-type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    username: newUserName.toString(),\r\n                    nickname: newNickName.toString(),\r\n                    password: newPassword.toString(),\r\n                    repeatPassword: repeatPassword.toString()\r\n                })\r\n            }).then((response) => {\r\n            response.json().then(async (validationData) => {\r\n                // Setting the current user and redirecting the user to the chat if the sign-up was successful.\r\n                if (checkValid(validationData)) {\r\n                    var newUser = await getUser(newUserName.toString());\r\n                    setUser(newUser);\r\n                    navigate(\"../chatScreen\");\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    return (\r\n        //The sign-up form.\r\n        <div className=\"container\" id=\"signContainer\">\r\n            <form className=\"text-center sign-up-form needs-validation\" noValidate id=\"signUpForm\"\r\n                  onSubmit={handleSubmit}>\r\n                <h3 className=\"log-in-header\">We need more friends, please join us ...</h3>\r\n\r\n                <div className=\"form-floating mb-3 input-style \">\r\n                    <input type=\"text\" name='userName' className=\"form-control input-box-size\" id=\"username\"\r\n                           placeholder=\"Username\"></input>\r\n                    <label className=\"form-label\" htmlFor=\"username\">Username</label>\r\n                    <span className=\"validation-helper\"></span>\r\n                </div>\r\n\r\n                <div className=\"form-floating mb-3 input-style \">\r\n                    <input type=\"text\" name='userName' className=\"form-control \" id=\"nickname\"\r\n                           placeholder=\"nickname\"></input>\r\n                    <label className=\"form-label\" htmlFor=\"nickname\">nickname</label>\r\n                    <span className=\"validation-helper\"></span>\r\n                </div>\r\n\r\n                <div className=\"form-floating mb-3 input-style \">\r\n                    <input type=\"password\" name='Password' className=\"form-control \" id=\"Password\"\r\n                           placeholder=\"Password\"></input>\r\n                    <label className=\"form-label\" htmlFor=\"Password\">Password</label>\r\n                    <span className=\"validation-helper\"></span>\r\n                </div>\r\n\r\n                <div className=\"form-floating mb-3 input-style \">\r\n                    <input type=\"password\" name='validatePassword' className=\"form-control \" id=\"validatePassword\"\r\n                           placeholder=\"Repeat password\"></input>\r\n                    <label className=\"form-label\" htmlFor=\"validatePassword\">Repeat password</label>\r\n                    <span className=\"validation-helper\"></span>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-lg\">Sign-in</button>\r\n                </div>\r\n\r\n                <div className=\"text\">\r\n                    already registered? log in <Link to='/' className=\"text\">here</Link>\r\n                </div>\r\n                <div className=\"text\">\r\n                  You are welcome to <a href='http://localhost:5189/Ranks'>Rate us</a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n        ;\r\n}\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}