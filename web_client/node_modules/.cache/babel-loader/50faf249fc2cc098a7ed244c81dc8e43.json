{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eitan Koren\\\\oop2\\\\ap2\\\\src\\\\chatScreen\\\\leftChatItem\\\\LeftChatItem.js\";\nimport './LeftChatItem.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LeftChatItem(props) {\n  // console.log(props)\n  var lastMessagePresented = \"\";\n  var iconClassName = \"\"; // If the type of the message is image, we present the string \"image\" and an image icon next to it as the last message.\n\n  if (props.conversation.type === \"image\") {\n    lastMessagePresented = \"image\";\n    iconClassName = \"bi bi-image\";\n  } // If the type of the message is record, we present the string \"voice recording\" and a mic icon next to it as the last message.\n  else if (props.conversation.type === \"audio\") {\n    lastMessagePresented = \"voice recording\";\n    iconClassName = \"bi bi-mic-fill\";\n  } // If the type of the message is video, we present the string \"video\" and a camera-video icon next to it as the last message.\n  else if (props.conversation.type === \"video\") {\n    lastMessagePresented = \"video\";\n    iconClassName = \"bi bi-camera-video-fill\";\n  } // If the type of the message is text (the last type of message), we present the last message sent with no icon.\n  else {\n    lastMessagePresented = props.conversation.lastMessage;\n  }\n\n  if (lastMessagePresented.length > 20) {\n    lastMessagePresented = lastMessagePresented.substring(0, 20) + `...`;\n  }\n\n  function showChat(chat) {\n    props.refer.current = chat;\n    props.setChat(chat);\n  }\n\n  return (\n    /*#__PURE__*/\n    // <div className='left-chat-item' onClick={() => showChat(props.chat)}>\n    //     {/* <div className='left-container'></div> */}\n    //     <img src={props.conversation.image} className=\"chat-profile-image top-profile-image float-start\"></img>\n    //     <span className=\"chat-member-name\">{props.conversation.nicknameInChat}</span>\n    //     <span className='last-message-time'>{props.conversation.time}</span>\n    //     <p className=\"chat-last-message\">{lastMessagePresented}&nbsp;\n    //         <i className={iconClassName}></i>\n    //     </p>\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"left-chat-item\",\n      onClick: () => showChat(props.chat),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-side-of-item\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"last-message-time\",\n          children: props.conversation.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-side-of-item\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.conversation.image,\n          className: \"chat-profile-image top-profile-image float-start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mid-side-of-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-member-name\",\n          children: props.conversation.nicknameInChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-last-message\",\n          children: [lastMessagePresented, \"\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: iconClassName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_c = LeftChatItem;\nexport default LeftChatItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftChatItem\");","map":{"version":3,"sources":["C:/Users/Eitan Koren/oop2/ap2/src/chatScreen/leftChatItem/LeftChatItem.js"],"names":["React","LeftChatItem","props","lastMessagePresented","iconClassName","conversation","type","lastMessage","length","substring","showChat","chat","refer","current","setChat","time","image","nicknameInChat"],"mappings":";AAAA,OAAO,oBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB;AAEA,MAAIC,oBAAoB,GAAG,EAA3B;AACA,MAAIC,aAAa,GAAG,EAApB,CAJyB,CAMzB;;AACA,MAAIF,KAAK,CAACG,YAAN,CAAmBC,IAAnB,KAA4B,OAAhC,EAAyC;AACrCH,IAAAA,oBAAoB,GAAG,OAAvB;AACAC,IAAAA,aAAa,GAAG,aAAhB;AACH,GAHD,CAIA;AAJA,OAKK,IAAIF,KAAK,CAACG,YAAN,CAAmBC,IAAnB,KAA4B,OAAhC,EAAyC;AAC1CH,IAAAA,oBAAoB,GAAG,iBAAvB;AACAC,IAAAA,aAAa,GAAG,gBAAhB;AACH,GAHI,CAIL;AAJK,OAKA,IAAIF,KAAK,CAACG,YAAN,CAAmBC,IAAnB,KAA4B,OAAhC,EAAyC;AAC1CH,IAAAA,oBAAoB,GAAG,OAAvB;AACAC,IAAAA,aAAa,GAAG,yBAAhB;AACH,GAHI,CAKL;AALK,OAMA;AACDD,IAAAA,oBAAoB,GAAGD,KAAK,CAACG,YAAN,CAAmBE,WAA1C;AACH;;AAGD,MAAIJ,oBAAoB,CAACK,MAArB,GAA8B,EAAlC,EAAsC;AAClCL,IAAAA,oBAAoB,GAAGA,oBAAoB,CAACM,SAArB,CAA+B,CAA/B,EAAkC,EAAlC,IAAyC,KAAhE;AACH;;AAED,WAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpBT,IAAAA,KAAK,CAACU,KAAN,CAAYC,OAAZ,GAAsBF,IAAtB;AACAT,IAAAA,KAAK,CAACY,OAAN,CAAcH,IAAd;AACH;;AAED;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAACR,KAAK,CAACS,IAAP,CAAvD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,mBAAhB;AAAA,oBAAqCT,KAAK,CAACG,YAAN,CAAmBU;AAAxD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACI;AAAK,UAAA,GAAG,EAAEb,KAAK,CAACG,YAAN,CAAmBW,KAA7B;AAAoC,UAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,oBAAmCd,KAAK,CAACG,YAAN,CAAmBY;AAAtD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,qBAAoCd,oBAApC,uBACI;AAAG,YAAA,SAAS,EAAEC;AAAd;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ;AA8BH;;KAnEQH,Y;AAoET,eAAeA,YAAf","sourcesContent":["import './LeftChatItem.css';\r\nimport React from 'react';\r\n\r\n\r\nfunction LeftChatItem(props) {\r\n    // console.log(props)\r\n\r\n    var lastMessagePresented = \"\";\r\n    var iconClassName = \"\";\r\n\r\n    // If the type of the message is image, we present the string \"image\" and an image icon next to it as the last message.\r\n    if (props.conversation.type === \"image\") {\r\n        lastMessagePresented = \"image\";\r\n        iconClassName = \"bi bi-image\";\r\n    }\r\n    // If the type of the message is record, we present the string \"voice recording\" and a mic icon next to it as the last message.\r\n    else if (props.conversation.type === \"audio\") {\r\n        lastMessagePresented = \"voice recording\";\r\n        iconClassName = \"bi bi-mic-fill\";\r\n    }\r\n    // If the type of the message is video, we present the string \"video\" and a camera-video icon next to it as the last message.\r\n    else if (props.conversation.type === \"video\") {\r\n        lastMessagePresented = \"video\";\r\n        iconClassName = \"bi bi-camera-video-fill\"\r\n    }\r\n\r\n    // If the type of the message is text (the last type of message), we present the last message sent with no icon.\r\n    else {\r\n        lastMessagePresented = props.conversation.lastMessage;\r\n    }\r\n\r\n\r\n    if (lastMessagePresented.length > 20) {\r\n        lastMessagePresented = lastMessagePresented.substring(0, 20) + `...`\r\n    }\r\n\r\n    function showChat(chat) {\r\n        props.refer.current = chat;\r\n        props.setChat(chat);\r\n    }\r\n\r\n    return (\r\n        // <div className='left-chat-item' onClick={() => showChat(props.chat)}>\r\n        //     {/* <div className='left-container'></div> */}\r\n        //     <img src={props.conversation.image} className=\"chat-profile-image top-profile-image float-start\"></img>\r\n        //     <span className=\"chat-member-name\">{props.conversation.nicknameInChat}</span>\r\n        //     <span className='last-message-time'>{props.conversation.time}</span>\r\n        //     <p className=\"chat-last-message\">{lastMessagePresented}&nbsp;\r\n        //         <i className={iconClassName}></i>\r\n        //     </p>\r\n        // </div>\r\n\r\n        <div className='left-chat-item' onClick={() => showChat(props.chat)}>\r\n            <div className='right-side-of-item'>\r\n                <span className='last-message-time'>{props.conversation.time}</span>\r\n            </div>\r\n            <div className='left-side-of-item'>\r\n                <img src={props.conversation.image} className=\"chat-profile-image top-profile-image float-start\"></img>\r\n            </div>\r\n\r\n            <div className='mid-side-of-item'>\r\n                <div className=\"chat-member-name\">{props.conversation.nicknameInChat}</div>\r\n                <div className=\"chat-last-message\">{lastMessagePresented}&nbsp;\r\n                    <i className={iconClassName}></i>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\nexport default LeftChatItem;\r\n"]},"metadata":{},"sourceType":"module"}